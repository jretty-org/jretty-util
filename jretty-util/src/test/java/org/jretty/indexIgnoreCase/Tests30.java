/**
 * 
 */
package org.jretty.indexIgnoreCase;

import org.jretty.tesper.LoopExecute;
import org.jretty.tesper.TestTools;
import org.junit.Test;

/**
 * 测试结论：
 *  Str03.indexIgnoreCase 速度最快、最稳定
 * @author zollty
 * @since 2018年5月29日
 */
public class Tests30 {
    
    String LONG_STR = "<p style=\"text-align:center;line-height:150%\"><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">技术手册</span></p><p style=\"text-align:center;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">作者：</span><span style=\"font-size:16px;line-height:150%\">zollty</span></p><p><span style=\"font-size:16px\">&nbsp;</span>一、几个术语</p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">ASF</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Apache Software Foundation</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">，即</span><span style=\"font-size:16px;line-height:150%\">Apache</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">自由软件基金会。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Jakarta</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">ASF</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">这个组织包含了很多软件项目，</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是</span><span style=\"font-size:16px;line-height:150%\">ASF</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">旗下的一套</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">解决方案的开源项目的名称，它包括了很多子项目，比如</span><span style=\"font-size:16px;line-height:150%\">Tomcat</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">Ant</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">、</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">等。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JVM</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">虚拟机，包括一套字节码指令集、一组寄存器、一个栈、一个垃圾回收堆和一个存储方法域。它屏蔽了与具体操作系统平台相关的信息，使</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序只需生成在</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JSP</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Java Server Page</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，是同</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">结合在一起的动态网页。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Servlet</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是</span><span style=\"font-size:16px;line-height:150%\">Java Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的简称，由</span><span style=\"font-size:16px;line-height:150%\">Serve+Applet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">演变而来，字面意思即“服务端小程序”，和</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">属于同一个层面。它是服务器端的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用程序，由</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器进行加载。</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的主要功能在于交互式地浏览和修改数据，生成动态</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">内容。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">CGI</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Common Gateway Interface</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">（通用网关接口），它是一段程序，运行在服务器上，提供同客户端</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">页面的接口，通俗的讲</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">就像是一座桥，把网页和</span><span style=\"font-size:16px;line-height:150%\">WEB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器中的执行程序连接起来，它把</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">接收的指令传递给服务器，再把服务器执行的结果返还给</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">页；用</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">可以实现处理表格，数据库查询，发送电子邮件等许多操作，最常见的</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序就是计数器。</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">使网页变得不是静态的，而是交互式的。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">Java Servlet</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">CGI</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的比较</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器上需要一些程序，常常是根据用户输入访问数据库的程序。这些通常是使用公共网关接口（</span><span style=\"font-size:16px;line-height:150%\">CGI(Common Gateway Interface)</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）应用程序完成的。然而，在服务器上运行</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，这种程序可使用</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">编程语言实现。在通信量大的服务器上，</span><span style=\"font-size:16px;line-height:150%\">Java Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的优点在于它们的执行速度更快于</span><span style=\"font-size: 16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序。各个用户请求被激活成单个程序中的一个线程，而无需创建单独的进程，这意味着服务器端处理请求的系统开销将明显降低。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">Java Servlet</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">JSP</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的比较</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">在底层运行的原理上是完全一样的。运行时，</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">必须被</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器编译成</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，真正提供</span><span style=\"font-size:16px;line-height:150%\">HTTP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务的也是</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，因此广义的</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">包含</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">。目前的</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">应用中已经很少单纯的使用</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">充当表示层，更多的是作为控制层组件来使用。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Tomcat</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是一个免费开源的</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">容器，是</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">项目中的一个核心项目，最初是由</span><span style=\"font-size:16px;line-height:150%\">Sun</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的软件构架师</span><span style=\"font-size:16px;line-height:150%\">James Duncan Davidson</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">开发的，后来他帮助将其变为开源项目，并由</span><span style=\"font-size:16px;line-height:150%\">Sun</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">贡献给</span><span style=\"font-size:16px;line-height:150%\">Apache</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">软件基金会。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架（</span><span style=\"font-size:16px;line-height:150%\">Model-View-Controller Framework</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），它包括</span><span style=\"font-size:16px;line-height:150%\">3</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">类对象：</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是应用对象，也就是功能逻辑，</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是指在屏幕上的表示，也就是</span><span style=\"font-size:16px;line-height:150%\">UI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">User Interface</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">用户界面）；</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">定义用户界面对于用于输入的响应方式，即对请求和应答事件进行处理。通常把</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">按软件层次分成</span><span style=\"font-size:16px;line-height:150%\">3</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">层：视图（</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）层，模型（</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）层，控制（</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）层。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Struts</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">也是</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的一个核心子项目，它提供了一种方法，可以在一个</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用程序中一起使用</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">。其目的是要解决完全由</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">或</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">实现的传统应用程序中固有的问题，例如，用</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">很难将</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">代码同</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">分开，结果将导致代码易懂性不高，后期维护较难。</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">其实也是一个</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架，但</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的重点在于</span><span style=\"font-size:16px;line-height:150%\">C</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端（控制端），同时也为</span><span style=\"font-size:16px;line-height:150%\">V</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端提供了一系列定制的标签，但是几乎没有涉及到</span><span style=\"font-size:16px;line-height:150%\">M</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端。所以在流行的轻量级</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架组合</span><span style=\"font-size:16px;line-height:150%\">SSH</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">中，</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">只是扮演了</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">端的角色。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JavaBean</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是一种</span><span style=\"font-size:16px;line-height:150%\">JAVA</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">语言写成的可重用组件，是公共的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">类。在</span><span style=\"font-size:16px;line-height:150%\">IDE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">中，</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的功能允许应用开发者浏览其中的方法，即</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是被编译的，无法利用原始的源文件。此外，还发展出了企业</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Enterprise JavaBeans</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），即</span><strong><span style=\"font-size:16px;line-height:150%\">EJB</span></strong><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，它包括会话</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Session Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），实体</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Entity Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）和消息驱动</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">MessageDriven Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。由于</span><span style=\"font-size:16px;line-height:150%\">EJB2.0</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">过于复杂，在</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">等轻量级框架出现后，大量的用户放弃了</span><span style=\"font-size:16px;line-height:150%\">EJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">。但目前轻量级的</span><span style=\"font-size:16px;line-height:150%\">EJB3.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">EJB3.1</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">已经放出，并得到了认可。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">JavaBean</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">EJB</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的区别</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是使用</span><span style=\"font-size:16px;line-height:150%\">java.beans</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">包开发的，它是</span><span style=\"font-size:16px;line-height:150%\">Java 2</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">标准版的一部分。</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是一台机器上同一个地址空间中运行的组件，是进程内组件。</span><span style=\"font-size:16px;line-height:150%\">Enterprise Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是使用</span><span style=\"font-size:16px;line-height:150%\">javax.ejb</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">包开发的，它是标准</span><span style=\"font-size:16px;line-height:150%\">JDK</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的扩展，是</span><span style=\"font-size:16px;line-height:150%\">J2EE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的一部分。</span><span style=\"font-size:16px;line-height:150%\">EJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是在多台机器上跨几个地址空间运行的组件，是进程间组件。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p>JavaEE中的两个MVC模型</p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC Model 1</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即传统的</span><span style=\"font-size:16px;line-height:150%\">JSP+JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，目前已经很少用了，但是初学者学习</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">前有必要了解。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC Model 2</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该模型的标准是：</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（视图</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，用户界面）</span><span style=\"font-size:16px;line-height:150%\">+Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（控制器</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，输入处理）</span><span style=\"font-size:16px;line-height:150%\">+JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（模型</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，功能逻辑）。由于</span><span style=\"font-size:16px;line-height:150%\">Java EE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">中的</span><span style=\"font-size:16px;line-height:150%\">JavaBean </span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（</span><span style=\"font-size:16px;line-height:150%\">EJB2.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）太复杂了，所以该模型最流行的一个版本是</span><span style=\"font-size:16px;line-height:150%\">SSH</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，即</span><span style=\"font-size:16px;line-height:150%\">Struts+Spring+Hibernate</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p>JavaEE应用分层模型</p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">大致分为如下五层：</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（数据持久层</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">数据访问层）</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">业务逻辑层</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">控制层</span></strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">表示层</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">&nbsp;</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">数据持久层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列负责操纵</span><span style=\"font-size:16px;line-height:150%\">POJO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Plain Old Java Object</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，普通的、传统的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">对象）的类组成，这些类负责把数据进行持久化，一般是<span style=\"text-decoration:underline;\">把数据保存到数据库中</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">数据访问层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列的</span><span style=\"font-size:16px;line-height:150%\">DAO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Data Access Object</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）组件组成，<span style=\"text-decoration:underline;\">实现对数据的增、删、改、查等细粒度的操作</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">业务逻辑层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列的业务逻辑对象组成，<span style=\"text-decoration:underline;\">实现系统所需要的业务逻辑方法</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">控制层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">此层由一系列控制器组成，用于<span style=\"text-decoration:underline;\">拦截用户请求</span>并调用业务逻辑对象的业务方法来处理请求，根据处理结果转发到不同的表示层。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">表示层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">此层由一系列的视图组件（<span style=\"text-decoration:underline;\">例如</span></span><span style=\"text-decoration:underline;\"><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">页面</span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）组成，负责收集用户请求并显示处理结果。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">各层组件之间以松散的方式耦合在一起。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">1</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">1</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">2</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">2 </span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>业务逻辑对象</strong></span><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>控制层</strong></span><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>表示层组件</strong></span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">3</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">3</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Hibernate</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">它是一个开源的、轻量级的</span><span style=\"font-size:16px;line-height:150%\">ORM</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Object Relation Mapping</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">）持久化框架，它允许应用程序以面向对象的方式来操作关系型的数据库。通过简单的配置和编码即可替代</span><span style=\"font-size:16px;line-height:150%\">JDBC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">繁琐的程序代码。在</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">语言中，数据可以存储在实体对象中，同时实体对象之间具有继承、多态和聚合等特点，而在数据库中存储的是二维关系数据，表与表的关系只有主外键关联关系，</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的引入可以解决上述矛盾。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Spring</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">框架是</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">应用的全方位解决方案，它贯穿于表示层、业务层和持久层。</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">自身还提供了一个</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架：</span><span style=\"font-size:16px;line-height:150%\">Spring MVC</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，使用</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">可以直接使用该</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架，也可以方便地与其他</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架集成，它像是一个中间容器，向上可以与</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架整合，向下可以和各种持久层框架整合（</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">iBATIS</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">OJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">、</span><span style=\"font-size:16px;line-height:150%\">JDBC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），将系统中的各个部分组件以松散的方式结合在一起。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; Spring</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">作为一个一站式的</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">解决方案，渗透了</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">技术的方方面面，它主要用来实现依赖注入、面向切面编程（</span><span style=\"font-size:16px;line-height:150%\">AOP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，用于降低耦合）、声明式事务以及对持久层的支持和简化等功能。最新的</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">框架也集成了</span><span style=\"font-size:16px;line-height:150%\">JPA</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Java Persistence API</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，</span><span style=\"font-size:16px;line-height: 150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">持久化</span><span style=\"font-size:16px;line-height:150%\">API</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），并实现了</span><span style=\"font-size:16px;line-height:150%\">EJB3.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的一些特性。</span><span style=\"font-size:16px;line-height:150%\"> </span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p><br/><span style=\"font-size:16px\"></span></p><p><span style=\"font-size:16px\"></span></p><div><strong><span style=\"font-size: 20px;\">RESTful 之 HTTP中的PUT 和 POST的区别</span></strong></div><div><p><br/></p><p>根本区别是，PUT是“幂等的”（indempotent），而POST则不是。</p></div><div>何为“幂等”，官方的描述如下：</div><div>Methods\r\n" + 
            " can also have the property of &quot;idempotence&quot; in that (aside from error \r\n" + 
            "or expiration issues) the side-effects of N &gt; 0 identical requests is\r\n" + 
            " the same as for a single request.</div><div>也就是说，如果一个<strong>方法重复执行多次，产生的效果是一样的</strong>，那就是idempotent的。</div><div><p>例如，新增一条记录，每次请求，如果参数一样，都会执行同样的动作（即，新增一条记录），那么就可以用PUT方法。反之，如果第二次请求，参数和第一次一样，但是服务端因为数据已经存在，不予新增记录。那么这类请求就是“非幂等的”，应该使用POST方法。</p><p><br/></p><div><span style=\"font-size: 20px;\"><strong>API和SPI</strong></span></div><br/><div>API\r\n" + 
            "：&nbsp;<span style=\"line-height:1.5;\">Application Programming Interface(应用编程接口)， 语言、框架以及类库<strong>对外提供的编码的接口</strong>。&nbsp;</span></div><div>SPI： 全名为Service Provider Interface</div><div>Service\r\n" + 
            " Provider Interface（<strong>服务提供商接口</strong>），满足某种服务标准的<strong>供应商提供的符合该标准的应用程序接口</strong>，SPI应该和该服务的 \r\n" + 
            "API标准是兼容的，应用程序一般应该是基于API编写，除非是SPI中包含API中没 有提供的功能而又必须使用。</div><p><br/></p><p><br/></p></div><p><span style=\"font-size: 18px;\"><strong>OPGA是一种编程习惯</strong></span></p><p>OPGA，即One Paramter Go Anywhere，是我总结出来的一种编程技巧和模式，并提供了编程的API。<br/><span style=\"font-size:16px\"> </span></p><p><span style=\"font-size:16px\">养成这种习惯之后，能够很大程度上减轻我们的编程难度，比如，苦费心思的定义接口方法、定义各种参数Bean、返回值Bean等。这些你都无须提前考虑。\r\n" + 
            " 举个例子：我要定义一个供第三方系统查询任务的接口。当我在考虑第三方系统应该传入哪些参数时，感觉有些迷茫，因为我还没想好，我暂时也确定不了……最终，我是这样定义该接口的： queryTaskInfo(String tpsid, String taskNo)。后来，\r\n" + 
            "在编写测试类时，想起来要给个查询时间的参数。那就得改接口方法。 习惯了OPGA设计模式后，编写程序就简单多了，不考虑那么多，直接定义一个 \r\n" + 
            "void queryTaskInfo(BeansSet beans)，我即既不需要提前考虑需要传入什么参数，也不需要急着考虑返回些什么。</span></p><p><span style=\"font-size:16px\"><br/></span></p><p><span style=\"font-size:16px\"></span></p><p><strong>property、attribute、parameter / param的区别？</strong></p><p><br/></p><p>直观翻译：</p><p>property 属性、值、变量</p><p>parameter / param 参数</p><p>attribute 特性、私有属性</p><p><br/></p><p>property和attribute都译为“参数”，有什么区别？</p><p><br/></p><p>我举个例子来解释：</p><p><br/></p><p>类的成员变量叫 attribute ，attribute通常是某个东西的特性。例如人的耳朵、鼻子、眼睛就是人的attributes；<br/></p><p><br/></p><p>property 通常是可变的数据， 比如，某些数据虽然是某个类的attributes，但是给它们加上setter/getter方法后<br/></p><p><br/></p><p>这些attributes就可以用在其他地方，在其他地方就叫做property，因为在其他地方它就不是特有的属性，而是可有可无、可多可少<br/></p><p>的东西。</p><p><br/></p><p>这么说吧，有如下一个类：</p><pre class=\"brush:java;toolbar:false\">class&nbsp;Peason&nbsp;{\r\n" + 
            "&nbsp;&nbsp;String&nbsp;name;\r\n" + 
            "&nbsp;&nbsp;String&nbsp;age;\r\n" + 
            "&nbsp;&nbsp;public&nbsp;void&nbsp;talk(String&nbsp;words){\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;date;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;date&nbsp;=&nbsp;new&nbsp;Date();\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(date+words);\r\n" + 
            "&nbsp;&nbsp;}\r\n" + 
            "}</pre><p>这个name和age是<strong>attribute</strong>，</p><p>words是<strong>parameter</strong>（param）</p><p>date是<strong>property</strong>，因为date是变量，是<strong>可有可无、可多可少的</strong>。</p><p><br/></p><p>总的来说，property的应用要广泛一些，你<strong>只需要认清楚attribute，那么剩下拿不准的就是property了</strong>，例如struts有一个标签就叫&lt;s:property&gt;</p><p><span style=\"font-size:16px\">&nbsp;</span><br/></p><p><span style=\"font-size:16px\"><br/></span></p><p><strong>二、搭建环境</strong></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">1.</span><span style=\"font-size:16px;font-family:宋体\">安装</span><span style=\"font-size:16px\">MyEclipse</span></p><p><span style=\"font-size:16px;font-family:宋体\">直接下载安装，我是在电驴上下载的最新破解版</span><span style=\"font-size:16px\">10.0</span><span style=\"font-size:16px;font-family:宋体\">版，</span><span style=\"font-size:16px\">ALL in ONE</span><span style=\"font-size:16px;font-family:宋体\">包（集成了</span><span style=\"font-size: 16px\">jdk</span><span style=\"font-size:16px;font-family:宋体\">和</span><span style=\"font-size:16px\">tomcat</span><span style=\"font-size:16px;font-family:宋体\">等）。安装文件名是：</span></p><p><span style=\"font-size:16px;color:red\">myeclipse-10.0-offline-installer-windows.exe</span></p><p><span style=\"font-size:16px\">&nbsp;</span><span style=\"font-size: 16px; font-family: 宋体; \">安装完</span><span style=\"font-size: 16px; \">MyEclipse</span><span style=\"font-size: 16px; font-family: 宋体; \">的</span><span style=\"font-size: 16px; \">ALL in ONE</span><span style=\"font-size: 16px; font-family: 宋体; \">包之后，我又安装了最新版的</span><span style=\"font-size: 16px; \">Tomcat</span><span style=\"font-size: 16px; font-family: 宋体; \">和</span><span style=\"font-size: 16px; \">JDK</span><span style=\"font-size: 16px; font-family: 宋体; \">。方法如下：</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">2.</span><span style=\"font-size:16px;font-family:宋体\">安装</span><span style=\"font-size:16px\">Tomcat</span></p><p><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">直接解压，文件名是：</span></p><p><span style=\"font-size:16px;color:red\">apache-tomcat-7.0.23-windows-x86.zip</span></p><p><span style=\"font-size:16px;font-family:宋体\">然后给</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">设置（系统）环境变量：</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 16px; \">变量名：TOMCAT_HOME，值：C:\\……\\apache-tomcat-7.0.23</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 16px; \">变量名：CATALINA_HOME，值：%TOMCAT_HOME%</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 16px; \">变量名：CLASSPATH，值：</span></p><pre class=\"brush:plain;toolbar:false\">.;\r\n" + 
            "%JAVA_HOME%\\lib\\dt.jar;\r\n" + 
            "%JAVA_HOME%\\lib\\tools.jar</pre><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">3.</span><span style=\"font-size:16px;font-family:宋体\">安装</span><span style=\"font-size:16px\">JDK</span></p><p><span style=\"font-size:16px;font-family:宋体\">直接双击</span><span style=\"font-size:16px\">EXE</span><span style=\"font-size:16px;font-family:宋体\">文件安装，文件名为：</span></p><p><span style=\"font-size:16px;color:red\">jdk-7u1-windows-i586.exe</span></p><p><span style=\"font-size:16px;font-family:宋体\">然后设置系统环境变量：</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p style=\"line-height: normal; \"><span style=\"font-size:16px;font-family:宋体\">变量名：</span><span style=\"font-size:16px\">JAVA_HOME</span><span style=\"font-size:16px;font-family:宋体\">，值：</span><span style=\"font-size:16px\">C:\\</span><span style=\"font-size:16px;font-family:宋体\">……</span><span style=\"font-size:16px\">\\jdk1.7.0_01</span></p><p style=\"line-height: normal; \"><span style=\"font-size:16px;font-family:宋体\">变量名：</span><span style=\"font-size:16px\">Path</span><span style=\"font-size:16px;font-family:宋体\">，值（最前面加上）：</span><span style=\"font-size:16px\">%JAVA_HOME%\\bin;</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">4.</span><span style=\"font-size:16px;font-family:宋体\">整合</span><span style=\"font-size:16px\">MyEclipse</span><span style=\"font-size:16px;font-family:宋体\">和</span><span style=\"font-size:16px\">JDK</span></p><p><span style=\"font-size:16px;font-family:宋体\">新建工程的时候，在选择</span><span style=\"font-size:16px\">JRE</span><span style=\"font-size:16px;font-family:宋体\">的下面有一个</span><span style=\"font-size:16px\">Configure</span><span style=\"font-size:16px;font-family:宋体\">的链接，点击进去设置就</span><span style=\"font-size:16px\">OK</span><span style=\"font-size:16px;font-family:宋体\">。</span></p><p><img src=\"/zoa/assets/image/20150708/clip_image001.png\" title=\"clip_image001.png\"/></p><p><span style=\"font-size:16px;font-family:宋体\">也可以在最上面的菜单栏选择</span><span style=\"font-size:16px\">Windows-&gt;Preferences</span><span style=\"font-size:16px;font-family:宋体\">展开</span><span style=\"font-size:16px\">java</span><span style=\"font-size:16px;font-family:宋体\">，找到</span><span style=\"font-size:16px\">InstalJREs</span><span style=\"font-size:16px;font-family:宋体\">，然后设置。（注意在选择“</span><span style=\"font-size:16px\">JRE Home</span><span style=\"font-size:16px;font-family:宋体\">”时要选择</span><span style=\"font-size: 16px\">JDK</span><span style=\"font-size:16px;font-family:宋体\">的目录，例如</span><span style=\"font-size:16px\">D:\\Java\\jdk1.7.0_01</span><span style=\"font-size:16px;font-family: 宋体\">，而不是选择</span><span style=\"font-size: 16px\">JDK</span><span style=\"font-size:16px;font-family:宋体\">目录下面的</span><span style=\"font-size:16px\">JRE</span><span style=\"font-size:16px;font-family:宋体\">子目录！）</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">5. MyEclipse</span><span style=\"font-size: 16px;font-family:宋体\">整合</span><span style=\"font-size:16px\">Tomcat</span></p><p><span style=\"font-size:16px;font-family:宋体\">最上面的菜单栏选择</span><span style=\"font-size:16px\">Windows-&gt;Preferences</span><span style=\"font-size:16px;font-family:宋体\">展开</span><span style=\"font-size:16px\">MyEclipse-&gt;Servers-&gt;Tomcat</span><span style=\"font-size:16px;font-family:宋体\">，然后设置目录，并将</span><span style=\"font-size:16px\">Enable</span><span style=\"font-size:16px;font-family:宋体\">勾上，然后点击</span><span style=\"font-size:16px\">Apply</span><span style=\"font-size:16px;font-family:宋体\">，最后点击</span><span style=\"font-size:16px\">OK</span><span style=\"font-size:16px;font-family:宋体\">。</span></p><p><span style=\"font-size:16px;font-family:宋体\">配置和打开</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">服务的方法如下，直接在工具栏上找到：</span></p><p><img src=\"/zoa/assets/image/20150708/clip_image002.png\" title=\"clip_image002.png\"/></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">6.</span><span style=\"font-size:16px;font-family:宋体\">新建</span><span style=\"font-size:16px\">Web Project</span><span style=\"font-size:16px;font-family:宋体\">工程和</span></p><p><span style=\"font-size:16px;font-family:宋体\">直接</span><span style=\"font-size:16px\">new-&gt;Web Project</span><span style=\"font-size:16px;font-family:宋体\">或者</span><span style=\"font-size:16px\">new-&gt;Project</span><span style=\"font-size:16px;font-family:宋体\">然后再选择</span><span style=\"font-size: 16px\">Web Project</span><span style=\"font-size:16px;font-family:宋体\">，选择相应的</span><span style=\"font-size:16px\">J2EE</span><span style=\"font-size:16px;font-family:宋体\">版本，那个</span><span style=\"font-size:16px\">Marven</span><span style=\"font-size:16px;font-family:宋体\">和</span><span style=\"font-size:16px\">JSTL</span><span style=\"font-size:16px;font-family:宋体\">默认不选。</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">文件路径默认是在</span><span style=\"font-size:16px\">MyEclipse</span><span style=\"font-size:16px;font-family:宋体\">的工作空间下的，</span><span style=\"font-size:16px\">WebRoot</span><span style=\"font-size:16px;font-family:宋体\">下存放</span><span style=\"font-size:16px\">JSP</span><span style=\"font-size:16px;font-family:宋体\">文件。</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">7.</span><span style=\"font-size:16px;font-family:宋体\">新建</span><span style=\"font-size:16px\">JSP</span><span style=\"font-size:16px;font-family:宋体\">文件</span></p><p><span style=\"font-size:16px;font-family:宋体\">在</span><span style=\"font-size:16px\">Web Project</span><span style=\"font-size:16px;font-family:宋体\">工程中的</span><span style=\"font-size:16px\">WebRoot</span><span style=\"font-size:16px;font-family:宋体\">目录上右键单击，如果</span><span style=\"font-size:16px\">New</span><span style=\"font-size:16px;font-family:宋体\">里面有就直接新建</span><span style=\"font-size:16px\">JSP</span><span style=\"font-size:16px;font-family:宋体\">（</span><span style=\"font-size:16px\">Advanced Templates</span><span style=\"font-size:16px;font-family:宋体\">），如果没有则比较麻烦：</span><span style=\"font-size:16px\">New-&gt;others</span><span style=\"font-size:16px;font-family:宋体\">，展开</span><span style=\"font-size:16px\">Web</span><span style=\"font-size:16px;font-family:宋体\">，找到</span><span style=\"font-size:16px\">JSP</span><span style=\"font-size:16px;font-family:宋体\">（</span><span style=\"font-size:16px\">Advanced Templates</span><span style=\"font-size:16px;font-family:宋体\">）。</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p style=\"margin-left:0;text-indent:0\"><span style=\"font-size:16px\">8.Myeclipse</span><span style=\"font-size:16px;font-family:宋体\">部署</span><span style=\"font-size:16px\">Web</span><span style=\"font-size:16px;font-family:宋体\">项目</span></p><p><span style=\"font-size:16px;font-family:宋体\">点击图标：</span><span style=\"font-size:16px\"><img src=\"/zoa/assets/image/20150708/clip_image003.png\" alt=\"说明: QQ拼音截图未命名\" title=\"clip_image003.png\"/></span><span style=\"font-size:16px;font-family:宋体\">左边那个，然后</span><span style=\"font-size:16px\">Add</span><span style=\"font-size:16px;font-family:宋体\">相应的</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">就可以了。</span></p><p><span style=\"font-size:16px;font-family:宋体\">这样操作后，</span><span style=\"font-size:16px\">MyEclipse</span><span style=\"font-size:16px;font-family:宋体\">会在</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">的</span><span style=\"font-size:16px\">Web</span><span style=\"font-size:16px;font-family:宋体\">目录（默认为</span><span style=\"font-size:16px\">webapps</span><span style=\"font-size:16px;font-family:宋体\">）下生成一个以工程名命名的文件夹，</span><span style=\"font-size:16px\">WebRoot</span><span style=\"font-size:16px;font-family:宋体\">下的</span><span style=\"font-size:16px\">JSP</span><span style=\"font-size:16px;font-family:宋体\">文件会同步到该目录中，以便</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">加载。</span></p><p><span style=\"font-size:16px;font-family:宋体\">注意：</span><span style=\"font-size:16px\">MyEclipse</span><span style=\"font-size:16px;font-family:宋体\">自带的</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">的</span><span style=\"font-size:16px\">webapps</span><span style=\"font-size:16px;font-family:宋体\">路径在：</span></p><p><span style=\"font-size:16px\">\\Workspaces\\MyEclipse\\.metadata\\.me_tcat\\webapps</span></p><p><span style=\"font-size:16px;font-family:宋体\">而</span><span style=\"font-size:16px\">Tomcat</span><span style=\"font-size:16px;font-family:宋体\">安装目录在：</span></p><p><span style=\"font-size:16px\">\\MyEclipse\\Common\\plugins\\com.genuitec.eclipse.easie.tomcat.myeclipse_9.0.0.me201109141806\\tomcat</span></p><p><span style=\"font-size:16px\">MyEclipse</span><span style=\"font-size:16px;font-family:宋体\">自带的</span><span style=\"font-size:16px\">JDK</span><span style=\"font-size:16px;font-family:宋体\">安装路径在：</span></p><p><span style=\"font-size:16px\">\\MyEclipse\\Common\\binary\\com.sun.java.jdk.win32.x86_1.6.0.013</span></p><p><span style=\"font-size:16px\"> <br/></span></p><p><br/></p><p><br/></p><p><span style=\"font-size:16px\">6</span><span style=\"font-size:16px;font-family:宋体\">、数据库操作</span></p><p><span style=\"font-size:16px\">1</span><span style=\"font-size:16px;font-family:宋体\">）将</span><span style=\"font-size:16px\">mysql-connector-java-5.0.8-bin.jar</span><span style=\"font-size:16px;font-family:宋体\">文件拷贝到</span><span style=\"font-size:16px\">WEB-INF/lib</span><span style=\"font-size:16px;font-family:宋体\">目录下；</span></p><p><span style=\"font-size:16px\">2</span><span style=\"font-size:16px;font-family:宋体\">）使用</span><span style=\"font-size:16px\">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><span style=\"font-size:16px;font-family:宋体\">来加载</span><span style=\"font-size:16px\">MySQL</span><span style=\"font-size:16px;font-family:宋体\">驱动；</span></p><p><span style=\"font-size:16px\">3</span><span style=\"font-size:16px;font-family:宋体\">）使用</span><span style=\"font-size:16px\">Connection conn=DriverManager.getConnection(url,user,passwd);</span><span style=\"font-size:16px;font-family:宋体\">连接数据库，其中一般定义</span><span style=\"font-size:16px\">String url=&quot;jdbc:mysql://localhost:3306/dbname&quot;;</span><span style=\"font-size:16px;font-family:宋体\">也可以直接把</span><span style=\"font-size:16px\">user</span><span style=\"font-size:16px;font-family:宋体\">和</span><span style=\"font-size:16px\">passwd</span><span style=\"font-size:16px;font-family:宋体\">写在</span><span style=\"font-size:16px\">dbname</span><span style=\"font-size:16px;font-family:宋体\">后：</span><span style=\"font-size:16px\">dbname?user=root&amp;password=admin</span><span style=\"font-size:16px;font-family:宋体\">；</span></p><p><span style=\"font-size:16px\">4</span><span style=\"font-size:16px;font-family:宋体\">）创建语句对象</span><span style=\"font-size:16px\">Statement</span><span style=\"font-size:16px;font-family:宋体\">，以便执行</span><span style=\"font-size:16px\">SQL</span><span style=\"font-size:16px;font-family:宋体\">，例如：</span></p><p><span style=\"font-size:16px\">Statement stmt = conn.createStatement();</span></p><p><span style=\"font-size:16px\">String addUser=&quot;INSERT INTO user(userid,username,passwd) VALUES(null,</span></p><p><span style=\"font-size:16px\">&#39;Zollty&#39;,&#39;1234&#39;)&quot;;</span></p><p><span style=\"font-size:16px\">stmt.executeUpdate(adduser);</span></p><p><span style=\"font-size:16px;font-family:宋体\">以下是连接</span><span style=\"font-size:16px\">mysql</span><span style=\"font-size:16px;font-family:宋体\">数据库的示范</span><span style=\"font-size:16px\">java</span><span style=\"font-size:16px;font-family:宋体\">文件：</span></p><p style=\"line-height: normal;\"><strong><span style=\"font-family:Consolas;color:#7F0055\">package</span></strong><span style=\"font-family: Consolas\"> csai.db;</span></p><p style=\"line-height: normal;\"><strong><span style=\"font-family:Consolas;color:#7F0055\">import</span></strong><span style=\"font-family: Consolas\"> java.sql.*;</span></p><p style=\"line-height: normal;\"><span style=\"font-family:Consolas\">&nbsp;</span></p><p style=\"line-height: normal;\"><strong><span style=\"font-family:Consolas;color:#7F0055\">public</span></strong> <strong><span style=\"font-family:Consolas;color:#7F0055\">class</span></strong><span style=\"font-family: Consolas\"> DBConn {</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-family:Consolas;color:#3F7F5F\">//</span><span style=\"font-family: &#39;MS Mincho&#39;;color:#3F7F5F\">得到数据</span><span style=\"font-family: 宋体;color:#3F7F5F\">库连</span><span style=\"font-family: &#39;MS Mincho&#39;;color:#3F7F5F\">接</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-family:Consolas;color:#7F0055\">public</span></strong> <strong><span style=\"font-family:Consolas;color:#7F0055\">static</span></strong><span style=\"font-family: Consolas\"> Connection createDBConn(){</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-family:Consolas;color:#7F0055\">try</span></strong><span style=\"font-family: Consolas\">{</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Class.<i>forName</i>(</span><span style=\"font-family:Consolas;color:#2A00FF\">&quot;com.mysql.jdbc.Driver&quot;</span><span style=\"font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Connection conn=DriverManager.<i>getConnection</i>(</span><span style=\"font-family:Consolas;color:#2A00FF\">&quot;jdbc:mysql://localhost:3306/root&quot;</span><span style=\"font-family: Consolas\">,</span><span style=\"font-family:Consolas;color:#2A00FF\">&quot;root&quot;</span><span style=\"font-family: Consolas\">,</span><span style=\"font-family:Consolas;color:#2A00FF\">&quot;admin&quot;</span><span style=\"font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-family:Consolas;color:#7F0055\">return</span></strong><span style=\"font-family: Consolas\"> conn;</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><strong><span style=\"font-family:Consolas;color:#7F0055\">catch</span></strong><span style=\"font-family: Consolas\">(Exception e){</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-family:Consolas;color:#7F0055\">return</span></strong> <strong><span style=\"font-family:Consolas;color:#7F0055\">null</span></strong><span style=\"font-family: Consolas\">;</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-family:Consolas;color:#3F7F5F\">//</span><span style=\"font-family: &#39;MS Mincho&#39;;color:#3F7F5F\">关</span><span style=\"font-family: 宋体;color:#3F7F5F\">闭</span><span style=\"font-family: &#39;MS Mincho&#39;;color:#3F7F5F\">数据</span><span style=\"font-family:宋体;color:#3F7F5F\">库连</span><span style=\"font-family:&#39;MS Mincho&#39;;color:#3F7F5F\">接</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-family:Consolas;color:#7F0055\">public</span></strong> <strong><span style=\"font-family:Consolas;color:#7F0055\">static</span></strong> <strong><span style=\"font-family:Consolas;color:#7F0055\">void</span></strong><span style=\"font-family: Consolas\"> closeConn(Connection conn){</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-family:Consolas;color:#7F0055\">try</span></strong><span style=\"font-family: Consolas\">{</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.close();</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><strong><span style=\"font-family:Consolas;color:#7F0055\">catch</span></strong><span style=\"font-family: Consolas\">(Exception e){</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-family: Consolas\">}</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">5) </span><span style=\"font-size:16px;font-family:宋体\">更新</span><span style=\"font-size:16px\">executeUpdate</span><span style=\"font-size:16px;font-family:宋体\">，查询</span><span style=\"font-size:16px\">executeQuery</span></p><p><br/></p><p><span style=\"font-size:16px\">6</span><span style=\"font-size:16px;font-family:宋体\">）</span><span style=\"font-size:16px\">ResultSet</span><span style=\"font-size:16px;font-family:宋体\">结果集，将查询到的结果赋值给</span><span style=\"font-size:16px\">ResultSet</span><span style=\"font-size:16px;font-family:宋体\">，用</span><span style=\"font-size:16px\">getXXX(n)</span><span style=\"font-size:16px;font-family:宋体\">取出具体的字段，例如</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">ResultSet rs = stmt.executeQuery(&quot;SELECT * FROM user&quot;);</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">while(rs.next()){</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int userid= rs.getInt(1); //</span><span style=\"font-size:16px;font-family:宋体\">取出第一个字段</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String username= rs.getString(2); //</span><span style=\"font-size:16px;font-family: 宋体\">第二个字段</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">}</span></p><p><span style=\"font-size:16px\">SQL</span><span style=\"font-size:16px;font-family:宋体\">技巧：</span><span style=\"font-size:16px\">SELECT userid,username FROM user limit 1,3</span></p><p><br/></p><p><span style=\"font-size:16px\">7</span><span style=\"font-size:16px;font-family:宋体\">）关闭数据库</span></p><p><span style=\"font-size:16px;font-family:宋体\">通常如下：</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">try{</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(rs != null){ rs.close(); rs=null; }//</span><span style=\"font-size:16px;font-family:宋体\">注意顺序</span><span style=\"font-size:16px\">rs</span><span style=\"font-size:16px;font-family:宋体\">、</span><span style=\"font-size:16px\">stmt</span><span style=\"font-size:16px;font-family:宋体\">、</span><span style=\"font-size:16px\">conn</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(stmt != null){ stmt.close(); stmt=null; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(conn != null){ conn.close(); conn=null; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">}catch(Exception e){</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; out.println(&quot;</span><span style=\"font-size:16px;font-family:宋体\">数据库关闭异常</span><span style=\"font-size:16px\">&quot;);</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">}</span></p><p><br/></p><p><span style=\"font-size:16px\">8</span><span style=\"font-size:16px;font-family:宋体\">）预处理语句对象</span><span style=\"font-size:16px\">PreparedStatement</span></p><p><span style=\"font-size:16px;font-family:宋体\">和</span><span style=\"font-size:16px\">Statement</span><span style=\"font-size:16px;font-family:宋体\">差不多，最大的区别在于可以在</span><span style=\"font-size:16px\">SQL</span><span style=\"font-size:16px;font-family:宋体\">语句中用</span><span style=\"font-size:16px\">?</span><span style=\"font-size:16px;font-family:宋体\">代替实际值，在后面才调用对象的</span><span style=\"font-size:16px\">setXXX(n,xx)</span><span style=\"font-size:16px;font-family:宋体\">方法为第</span><span style=\"font-size: 16px\">n</span><span style=\"font-size:16px;font-family:宋体\">个</span><span style=\"font-size:16px\">?</span><span style=\"font-size:16px;font-family:宋体\">赋</span><span style=\"font-size:16px\">XXX</span><span style=\"font-size:16px;font-family:宋体\">类型的值，例如</span></p><p><span style=\"font-size:16px\">String addUser =&quot;INSERT INTO user(userid,username,passwd) VALUES(null,?,?)&quot;;</span></p><p><span style=\"font-size:16px\">PreparedStatement pstmt= conn.prepareStatement(addUser);</span></p><p><span style=\"font-size:16px\">pstmt= conn.setString(1,&quot;Zollty&quot;);</span></p><p><span style=\"font-size:16px\">pstmt= conn.setString(2,&quot;123456&quot;); //</span><span style=\"font-size:16px;font-family:宋体\">设置参数</span></p><p><span style=\"font-size:16px\">pstmt.exetuteUpdate(); //</span><span style=\"font-size:16px;font-family:宋体\">直接执行</span><span style=\"font-size:16px\">Update</span><span style=\"font-size:16px;font-family:宋体\">，此时无需参数。</span></p><p><br/></p><p><span style=\"font-size:16px\">10</span><span style=\"font-size:16px;font-family:宋体\">、网页中访问</span><span style=\"font-size:16px\">Servlet</span><span style=\"font-size:16px;font-family:宋体\">（须在</span><span style=\"font-size:16px\">web.xml</span><span style=\"font-size:16px;font-family:宋体\">中配置）</span><span style=\"font-size:16px\"><br/> </span><span style=\"font-size:16px;font-family:宋体\">在</span><span style=\"font-size:16px\">src</span><span style=\"font-size:16px;font-family:宋体\">文件夹下新建一个</span><span style=\"font-size:16px\">com.zollty</span><span style=\"font-size:16px;font-family:宋体\">包，然后新建</span><span style=\"font-size:16px\">ServletDemo0</span><span style=\"font-size:16px;font-family:宋体\">类，在</span><span style=\"font-size:16px\">WEB-INF</span><span style=\"font-size:16px;font-family:宋体\">文件夹下的</span><span style=\"font-size:16px\">web.xml</span><span style=\"font-size:16px;font-family:宋体\">中配置这个类：在</span><span style=\"font-size:16px\">&lt;web-app&gt;</span><span style=\"font-size:16px;font-family:宋体\">标签对之间添加</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;</span><span style=\"color:#3F7F7F\">servlet</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;</span><span style=\"color:#3F7F7F\">servlet-name</span><span style=\"color:teal\">&gt;</span>ServletDemo01<span style=\"color:teal\">&lt;/</span><span style=\"color:#3F7F7F\">servlet-name</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;</span><span style=\"color:#3F7F7F\">servlet-class</span><span style=\"color:teal\">&gt;</span>com.zollty.ServletDemo01<span style=\"color:teal\">&lt;/</span><span style=\"color:#3F7F7F\">servlet-class</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;/</span><span style=\"color:#3F7F7F\">servlet</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;</span><span style=\"color:#3F7F7F\">servlet-mapping</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;</span><span style=\"color:#3F7F7F\">servlet-name</span><span style=\"color:teal\">&gt;</span>ServletDemo01<span style=\"color:teal\">&lt;/</span><span style=\"color:#3F7F7F\">servlet-name</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;</span><span style=\"color:#3F7F7F\">url-pattern</span><span style=\"color:teal\">&gt;</span>/ServletDemo01<span style=\"color:teal\">&lt;/</span><span style=\"color:#3F7F7F\">url-pattern</span><span style=\"color:teal\">&gt;</span></p><p style=\"line-height: normal;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:teal\">&lt;/</span><span style=\"color:#3F7F7F\">servlet-mapping</span><span style=\"color:teal\">&gt;</span></p><p><br/></p><p><span style=\"font-size:16px;font-family:宋体\">11、Servlet之<span style=\"color:red\">Filter</span>和<span style=\"color:red\">Listener</span></span></p><p><span style=\"font-size:16px;font-family:宋体\">Filter开发分为二个步骤：</span></p><p><span style=\"font-size:16px;font-family:宋体\">1.编写java类实现Filter接口，并实现其doFilter方法。</span></p><p><span style=\"font-size:16px;font-family:宋体\">2.在 web.xml 文件中使用&lt;filter&gt;和&lt;filter-mapping&gt;元素对编写的filter类进行注册，并设置它所能拦截的资源。</span></p><p><span style=\"font-size:16px;font-family:宋体\">Filter链</span></p><p><span style=\"font-size:16px;font-family:宋体\">在一个web应用中，可以开发编写多个Filter，这些Filter组合起来称之为一个Filter链。</span></p><p><span style=\"font-size:16px;font-family:宋体\">web服务器根据Filter在web.xml文件中的注册顺序，决定先调用哪个Filter，当第一个Filter的doFilter方法被调用时，web服务器会创建一个代表Filter链的FilterChain对象传递给该方法。在doFilter方法中，开发人员如果调用了FilterChain对象的doFilter方法，则web服务器会检查FilterChain对象中是否还有filter，如果有，则调用第2个filter，如果没有，则调用目标资源。</span></p><p><span style=\"font-size:16px;font-family:宋体\">Filter链实验（查看filterChain API文档）</span></p><p><span style=\"font-size:16px;font-family:宋体\">Filter的部署-注册Filter</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&lt;filter&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp; &nbsp; &lt;filter-name&gt;testFitler&lt;/filter-name&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp; &nbsp; &lt;filter-class&gt;org.test.TestFiter&lt;/filter-class&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp; &nbsp; &lt;init-param&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;param-name&gt;word_file&lt;/param-name&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;param-value&gt;/WEB-INF/word.txt&lt;/param-value&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp; &lt;/init-param&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&lt;/filter&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">1.&lt;filter-name&gt;用于为过滤器指定一个名字，该元素的内容不能为空。</span></p><p><span style=\"font-size:16px;font-family:宋体\">2.&lt;filter-class&gt;元素用于指定过滤器的完整的限定类名。</span></p><p><span style=\"font-size:16px;font-family:宋体\">3.&lt;init-param&gt;元素用于为过滤器指定初始化参数，它的子元素&lt;param-name&gt;指定参数的名字，&lt;param-value&gt;指定参数的值。在过滤器中，可以使用FilterConfig接口对象来访问初始化参数。</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&lt;filter-mapping&gt;元素用于设置一个 Filter 所负责拦截的资源。一个Filter拦截的资源可通过两种方式来指定：Servlet 名称和资源访问的请求路径</span></p><p><span style=\"font-size:16px;font-family:宋体\">&lt;filter-name&gt;子元素用于设置filter的注册名称。该值必须是在&lt;filter&gt;元素中声明过的过滤器的名字</span></p><p><span style=\"font-size:16px;font-family:宋体\">&lt;url-pattern&gt;设置 filter 所拦截的请求路径(过滤器关联的URL样式)</span></p><p><span style=\"font-size:16px;font-family:宋体\">&lt;servlet-name&gt;指定过滤器所拦截的Servlet名称。</span></p><p><span style=\"font-size:16px;font-family:宋体\">&lt;dispatcher&gt;指定过滤器所拦截的资源被 Servlet 容器调用的方式，可以是REQUEST,INCLUDE,FORWARD和ERROR之一，默认REQUEST。用户可以设置多个&lt;dispatcher&gt; 子元素用来指定 Filter 对资源的多种调用方式进行拦截。</span></p><p><span style=\"font-size:16px;font-family:宋体\">&lt;dispatcher&gt; 子元素可以设置的值及其意义：</span></p><p><span style=\"font-size:16px;font-family:宋体\">REQUEST：当用户直接访问页面时，Web容器将会调用过滤器。如果目标资源是通过RequestDispatcher的include()或forward()方法访问时，那么该过滤器就不会被调用。</span></p><p><span style=\"font-size:16px;font-family:宋体\">INCLUDE：如果目标资源是通过RequestDispatcher的include()方法访问时，那么该过滤器将被调用。除此之外，该过滤器不会被调用。</span></p><p><span style=\"font-size:16px;font-family:宋体\">FORWARD：如果目标资源是通过RequestDispatcher的forward()方法访问时，那么该过滤器将被调用，除此之外，该过滤器不会被调用。</span></p><p><span style=\"font-size:16px;font-family:宋体\">ERROR：如果目标资源是通过声明式异常处理机制调用时，那么该过滤器将被调用。除此之外，过滤器不会被调用。</span></p><p><span style=\"font-size:16px;font-family:宋体\">Tip：Filter的部署—映射Filter示例：</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&lt;filter-mapping&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;filter-name&gt;testFilter&lt;/filter-name&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;url-pattern&gt;/test.jsp&lt;/url-pattern&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&lt;/filter-mapping&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&lt;filter-mapping&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;filter-name&gt;testFilter&lt;/filter-name&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;url-pattern&gt;/index.jsp&lt;/url-pattern&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;&nbsp;&nbsp;&nbsp; &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&lt;/filter-mapping&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">FilterConfig接口:</span></p><p><span style=\"font-size:16px;font-family:宋体\">用户在配置filter时，可以使用&lt;init-param&gt;为filter配置一些初始化参数，当web容器实例化Filter对象，调用其init方法时，会把封装了filter初始化参数的filterConfig对象传递进来。因此开发人员在编写filter时，通过filterConfig对象的方法，就可获得：</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">String getFilterName()：得到filter的名称。</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">String getInitParameter(String name)：返回在部署描述中指定名称的初始化参数的值。如果不存在返回null.</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">Enumeration getInitParameterNames()：返回过滤器的所有初始化参数的名字的枚举集合。</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">public ServletContext getServletContext()：返回Servlet上下文对象的引用。</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">12、<span style=\"color:red\">AJAX基础</span></span></p><p><br/></p><p><span style=\"font-size:16px;font-family:宋体\">知识补充：日期和时间</span></p><p><span style=\"font-size:16px;font-family:宋体\">通常要：将自定义的日期和系统时间连接起来，形成一个</span><span style=\"font-size: 16px\">Date</span><span style=\"font-size:16px;font-family:宋体\">字符串。如果还需要格式化时间，则利用</span><span style=\"font-size:16px\">parse</span><span style=\"font-size:16px;font-family:宋体\">函数将标准的</span><span style=\"font-size:16px\">Date</span><span style=\"font-size:16px;font-family:宋体\">字符串转换成</span><span style=\"font-size:16px\">Date</span><span style=\"font-size:16px;font-family:宋体\">对象，然后就可以交给</span><span style=\"font-size:16px\">format</span><span style=\"font-size:16px;font-family:宋体\">来格式化了。方法如下：</span></p><p><span style=\"font-size: 15px;font-family: Consolas\">DateFormat </span><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">t</span><span style=\"font-size: 15px;font-family: Consolas\">=DateFormat.<i>getTimeInstance</i>();</span></p><p><span style=\"font-size: 15px;font-family: Consolas\">String time=</span> <span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">t</span><i><span style=\"font-size: 15px;font-family: Consolas\">.format(</span></i><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">new</span><i><span style=\"font-size: 15px;font-family: Consolas\"> java.util.Date());//</span></i><i><span style=\"font-size: 15px;font-family: 宋体\">当前时间</span></i><span style=\"font-size:15px;font-family:Consolas;color:#2A00FF\">HH:mm:ss</span><i><span style=\"font-size: 15px;font-family: 宋体\">样式的，没有毫秒</span></i></p><p><span style=\"font-size: 15px;font-family: Consolas\">String sDate=&quot;</span><i><span style=\"font-size: 15px;font-family: Consolas\">2020-11-11</span></i><span style=\"font-size: 15px;font-family: Consolas\">&quot;+&quot; &quot;+time;//</span><span style=\"font-size: 15px;font-family: 宋体\">完整的日期</span></p><p><span style=\"font-size: 15px;font-family: Consolas\">DateFormat </span><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">dt</span><span style=\"font-size: 15px;font-family: Consolas\">=DateFormat.<i>getDateTimeInstance</i>();//</span><span style=\"font-size: 15px;font-family: 宋体\">按默认的完整的</span><span style=\"font-size: 15px;font-family: Consolas\">Date</span><span style=\"font-size: 15px;font-family: 宋体\">样式来格式化</span></p><p><span style=\"font-size: 15px;font-family: Consolas\">SimpleDateFormat </span><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">sdf</span><span style=\"font-size: 15px;font-family: Consolas\">=</span><strong><span style=\"font-size:15px;font-family:Consolas;color:#7F0055\">new</span></strong><span style=\"font-size: 15px;font-family: Consolas\"> SimpleDateFormat(</span><span style=\"font-size:15px;font-family: Consolas;color:#2A00FF\">&quot;yyyy</span><span style=\"font-size:15px;font-family:宋体;color:#2A00FF\">年</span><span style=\"font-size:15px;font-family:Consolas;color:#2A00FF\">MM</span><span style=\"font-size:15px;font-family:宋体;color:#2A00FF\">月</span><span style=\"font-size:15px;font-family:Consolas;color:#2A00FF\">dd</span><span style=\"font-size:15px;font-family:宋体;color:#2A00FF\">日</span> <span style=\"font-size:15px;font-family: Consolas;color:#2A00FF\">HH:mm:ss.S&quot;</span><span style=\"font-size: 15px;font-family: Consolas\">);//</span><span style=\"font-size:15px;font-family: Consolas;color:#2A00FF\">S</span><span style=\"font-size: 15px;font-family: 宋体\">为毫秒</span></p><p><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">sdf</span><i><span style=\"font-size: 15px;font-family: Consolas\">.format(</span></i><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">dt</span><i><span style=\"font-size: 15px;font-family: Consolas\">.parse(</span></i><span style=\"font-size: 15px;font-family: Consolas\">sDate</span><i><span style=\"font-size: 15px;font-family: Consolas\">))</span></i><span style=\"font-size: 15px;font-family: Consolas\">;//</span><span style=\"font-size: 15px;font-family: 宋体\">通过</span><span style=\"font-size:15px;font-family:Consolas;color:#0000C0\">df</span><i><span style=\"font-size: 15px;font-family: Consolas\">.parse(</span></i><span style=\"font-size: 15px;font-family: Consolas\">sDate</span><i><span style=\"font-size: 15px;font-family: Consolas\">)</span></i><i><span style=\"font-size: 15px;font-family: 宋体\">将得到一个</span></i><i><span style=\"font-size: 15px;font-family: Consolas\">Date</span></i><i><span style=\"font-size: 15px;font-family: 宋体\">实例</span></i></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">二、设计模式基础</span><span style=\"font-size:16px\">(</span><span style=\"font-size:16px;font-family:宋体\">略</span><span style=\"font-size:16px\">)</span></p><p><span style=\"font-size:16px\">1</span><span style=\"font-size:16px;font-family:宋体\">、</span><span style=\"font-size:16px\">DAO</span></p><p><span style=\"font-size:16px\">2</span><span style=\"font-size:16px;font-family:宋体\">、</span><span style=\"font-size:16px\">MVC</span><span style=\"font-size:16px;font-family:宋体\">简介之</span><span style=\"font-size:16px\">Model 1</span><span style=\"font-size:16px;font-family:宋体\">和</span><span style=\"font-size:16px\">Model 2</span></p><p><br/></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">==========</span><span style=\"font-size:16px;font-family:宋体\">知识补充</span><span style=\"font-size:16px\">============</span></p><p><span style=\"font-size:16px;font-family:宋体\">连接数据库的基本步骤：</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. </span><span style=\"font-size:16px;font-family:宋体\">加载数据库驱动（</span><span style=\"font-size:16px\">Driver Class</span><span style=\"font-size:16px;font-family:宋体\">），例如</span><span style=\"font-size: 16px\">com.mysql.jdbc.Driver</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. </span><span style=\"font-size:16px;font-family:宋体\">连接数据库的</span><span style=\"font-size:16px\">url</span><span style=\"font-size:16px;font-family:宋体\">，例如</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jdbc:mysql://localhost:3306/javaweb</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">把返回的对象赋值给一个</span><span style=\"font-size:16px\">Connection</span><span style=\"font-size:16px;font-family:宋体\">对象（通常命名为</span><span style=\"font-size: 16px\">conn</span><span style=\"font-size:16px;font-family:宋体\">）</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">连接后就可以使用数据库了，使用的基本步骤为</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. </span><span style=\"font-size:16px;font-family:宋体\">创建语句对象（</span><span style=\"font-size:16px\">Statement</span><span style=\"font-size:16px;font-family:宋体\">），例如</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Statement stmt = conn.createStatement();</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;font-family:宋体\">注意右边的</span><span style=\"font-size:16px\">conn</span><span style=\"font-size:16px;font-family:宋体\">就是连接</span><span style=\"font-size:16px\">url</span><span style=\"font-size:16px;font-family:宋体\">时返回的</span><span style=\"font-size:16px\">Connection</span><span style=\"font-size:16px;font-family:宋体\">对象</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. </span><span style=\"font-size:16px;font-family:宋体\">调用语句对象的方法来对数据库进行操作，例如</span></p><p><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stmt.exeuteUpdate(&quot;SQL</span><span style=\"font-size:16px;font-family:宋体\">语句</span><span style=\"font-size:16px\">&quot;);</span></p><p><span style=\"font-size:16px\">&nbsp;=============================</span></p><p><br/></p><p><strong><span style=\"font-size:20px;font-family:宋体\">Tomcat</span></strong><strong><span style=\"font-size:20px;font-family: 宋体\">配置</span></strong></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">会话超时时间：</span></p><p><span style=\"font-size:16px\">\\conf\\web.xml</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp; &lt;session-config&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;session-timeout&gt;-1&lt;/session-timeout&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp; &lt;/session-config&gt;</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">URL</span><span style=\"font-size:16px;font-family:宋体\">中文支持</span><span style=\"font-size:16px\">:</span></p><p><span style=\"font-size:16px\">\\conf\\server.xml</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp; &lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionTimeout=&quot;20000&quot;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; redirectPort=&quot;8443&quot; /&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">加入：<span style=\"color:red\">URIEncoding=&quot;utf-8&quot;</span></span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><strong><span style=\"font-size:21px;font-family:宋体\">CKFinder</span></strong><strong><span style=\"font-size:21px;font-family: 宋体\">破解</span></strong></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px\">CKEditor</span><span style=\"font-size:16px;font-family:宋体\">图片预览文字</span></p><p><span style=\"font-size:16px\">\\ckeditor\\plugins\\image\\dialogs\\image.js</span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">初始化：</span></p><p style=\"line-height: normal;\"><span style=\"font-size:19px;font-family: 黑体;color:#BF5F3F\">&lt;%@</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#3F7F7F\">taglib</span> <span style=\"color:#7F007F\">uri</span>=<i><span style=\"color:#2A00FF\">&quot;http://ckeditor.com&quot;</span></i> <span style=\"color:#7F007F\">prefix</span>=<i><span style=\"color:#2A00FF\">&quot;ckeditor&quot;</span></i> <span style=\"color:#BF5F3F\">%&gt;</span></span></p><p style=\"line-height: normal;\"><span style=\"font-size:19px;font-family:黑体;color:#BF5F3F\">&lt;%@</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#3F7F7F\">taglib</span> <span style=\"color:#7F007F\">uri</span>=<i><span style=\"color:#2A00FF\">&quot;http://ckfinder.com&quot;</span></i> <span style=\"color:#7F007F\">prefix</span>=<i><span style=\"color:#2A00FF\">&quot;ckfinder&quot;</span></i> <span style=\"color:#BF5F3F\">%&gt;</span></span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:19px;font-family:黑体;color:#3F5FBF\">&lt;!-- 整合CKFinder和CKEditor --&gt;</span></p><p style=\"line-height: normal;\"><span style=\"font-size:19px;font-family: 黑体;color:teal\">&lt;</span><span style=\"font-size:19px;font-family:黑体;color:#3F7F7F\">ckfinder:setupCKEditor</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#7F007F\">basePath</span>=<i><span style=\"color:#2A00FF\">&quot;/zollty/CKFinderJava/userfiles/&quot;</span></i> <span style=\"color:#7F007F\">editor</span>=<i><span style=\"color:#2A00FF\">&quot;editor1&quot;</span></i> <span style=\"color:teal\">/&gt;</span></span></p><p style=\"line-height: normal;\"><span style=\"font-size:19px;font-family: 黑体;color:teal\">&lt;</span><span style=\"font-size:19px;font-family:黑体;color:#3F7F7F\">ckeditor:replace</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#7F007F\">replace</span>=<i><span style=\"color:#2A00FF\">&quot;editor1&quot;</span></i> <span style=\"color:#7F007F\">basePath</span>=<i><span style=\"color:#2A00FF\">&quot;/zollty/CKFinderJava/userfiles/&quot;</span></i> <span style=\"color:teal\">/&gt;</span></span></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">方法二：</span></p><p style=\"line-height: normal; \"><span style=\"font-size:19px;font-family: 黑体;color:teal\">&lt;</span><span style=\"font-size:19px;font-family:黑体;color:#3F7F7F;background:lightgrey;background:lightgrey\">script</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#7F007F\">type</span>=<i><span style=\"color:#2A00FF\">&quot;text/javascript&quot;</span></i> <span style=\"color:#7F007F\">src</span>=<i><span style=\"color:#2A00FF\">&quot;/zollty/ckeditor/ckeditor.js&quot;</span></i><span style=\"color:teal\">&gt;&lt;/</span><span style=\"color:#3F7F7F;background:lightgrey;background:lightgrey\">script</span><span style=\"color:teal\">&gt;</span></span></p><p style=\"line-height: normal; \"><span style=\"font-size:19px;font-family: 黑体;color:teal\">&lt;</span><span style=\"font-size:19px;font-family:黑体;color:#3F7F7F\">script</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#7F007F\">type</span>=<i><span style=\"color:#2A00FF\">&quot;text/javascript&quot;</span></i> <span style=\"color:#7F007F\">src</span>=<i><span style=\"color:#2A00FF\">&quot;/zollty/ckfinder/ckfinder.js&quot;</span></i><span style=\"color:teal\">&gt;&lt;/</span><span style=\"color:#3F7F7F\">script</span><span style=\"color:teal\">&gt;</span></span></p><p style=\"line-height: normal; \"><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p style=\"line-height: normal; \"><span style=\"font-size:19px;font-family: 黑体;color:#3F5FBF\">&lt;!-- 整合CKFinder和CKEditor --&gt;</span></p><p style=\"line-height: normal; \"><span style=\"font-size:19px;font-family: 黑体;color:teal\">&lt;</span><span style=\"font-size:19px;font-family:黑体;color:#3F7F7F\">script</span><span style=\"font-size:19px;font-family:黑体\"> <span style=\"color:#7F007F\">type</span>=<i><span style=\"color:#2A00FF\">&quot;text/javascript&quot;</span></i><span style=\"color:teal\">&gt;</span></span></p><p style=\"line-height: normal; \"><strong><span style=\"font-size:19px;font-family:黑体;color:#7F0055;background:white;background:white\">var </span></strong><span style=\"font-size: 19px;font-family: 黑体;background: white\">editor = CKEDITOR.replace( &#39;editor1&#39;,</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 19px;font-family: 黑体;background: white\">&nbsp;&nbsp; {</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 19px;font-family: 黑体;background: white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolbar : &#39;Basic&#39;</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 19px;font-family: 黑体;background: white\">&nbsp;&nbsp; });</span></p><p style=\"line-height: normal; \"><span style=\"font-size: 19px;font-family: 黑体;background: white\">&nbsp;&nbsp; CKFinder.SetupCKEditor( editor, &#39;/zollty/CKFinderJava/userfiles/&#39; );</span></p><p style=\"line-height: normal; \"><span style=\"font-size:19px;font-family: 黑体;color:teal;background:white;background:white\">&lt;/</span><span style=\"font-size:19px;font-family:黑体;color:#3F7F7F;background:white;background:white\">script</span><span style=\"font-size:19px;font-family:黑体;color:teal;background:white;background:white\">&gt;</span></p><p><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p><span style=\"font-size:16px\">&nbsp;</span><span class=\"Apple-style-span\" style=\"font-size: 16px; line-height: normal; \">DateUtil.DateToString(user.getBirthday(),&quot;yyyy-MM-dd&quot;);</span></p><pre class=\"brush:java;toolbar:false\">import&nbsp;java.text.DateFormat;\r\n" + 
            "import&nbsp;java.text.SimpleDateFormat;\r\n" + 
            "import&nbsp;java.util.Date;\r\n" + 
            "\r\n" + 
            "public&nbsp;class&nbsp;DateUtil&nbsp;{\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;Date&nbsp;StringToDate(String&nbsp;dateString,String&nbsp;formatString){\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DateFormat&nbsp;fm&nbsp;=&nbsp;new&nbsp;SimpleDateFormat(formatString);\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;date&nbsp;=&nbsp;null;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date&nbsp;=&nbsp;fm.parse(dateString);\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(java.text.ParseException&nbsp;e)&nbsp;{\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Thu&nbsp;Jan&nbsp;18&nbsp;00:00:00&nbsp;CST&nbsp;2007\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;date;\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;DateToString(Date&nbsp;date,String&nbsp;formatString){\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DateFormat&nbsp;fm&nbsp;=&nbsp;new&nbsp;SimpleDateFormat(formatString);\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;str&nbsp;=&nbsp;new&nbsp;String();\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;fm.format(date);&nbsp;&nbsp;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n" + 
            "}</pre><p style=\"line-height: normal;\"><span style=\"font-size:16px\"></span><span class=\"Apple-style-span\" style=\"font-size: 16px; line-height: 28px; \">&nbsp;</span><br/></p><p><br/></p><p><br/></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><strong><span style=\"font-size:20px;font-family:宋体\">JDBC</span></strong><strong><span style=\"font-size:20px;font-family: 宋体\">用配置文件连接数据库</span></strong></p><p><span style=\"font-size:16px\">&nbsp;</span></p><p><span style=\"font-size:16px;font-family:宋体\">配置文件为：</span><span style=\"font-size:16px\">src/db.properties</span><span style=\"font-size:16px;font-family:宋体\">，其内容如下</span></p><p><span style=\"font-size: 14px;font-family: Consolas\">driver_class=</span><span style=\"font-size: 14px;font-family:Consolas;color:#2A00FF\">com.mysql.jdbc.Driver</span></p><p><span style=\"font-size: 14px;font-family: Consolas\">url=</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">jdbc\\:mysql\\://localhost\\:3306/user</span></p><p><span style=\"font-size: 14px;font-family: Consolas\">username=</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">root</span></p><p><span style=\"font-size: 14px;font-family: Consolas\">password=</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">a123456</span></p><p>&nbsp;</p><p><span style=\"font-size:16px;font-family:宋体\">下面是连接数据库的程序：</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">public</span></strong> <strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">static</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> Connection getConnection(){</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Connection connection = </span><strong><span style=\"font-size:14px;font-family: Consolas;color:#7F0055\">null</span></strong><span style=\"font-size: 14px;font-family: Consolas\">;</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">try</span></strong><span style=\"font-size: 14px;font-family: Consolas\">{</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Properties properties = <i>getProperties</i>();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">driver_class</span></i><span style=\"font-size: 14px;font-family: Consolas\"> = properties.getProperty(</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">&quot;driver_class&quot;</span><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">url</span></i><span style=\"font-size: 14px;font-family: Consolas\"> = properties.getProperty(</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">&quot;url&quot;</span><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">username</span></i><span style=\"font-size: 14px;font-family: Consolas\"> = properties.getProperty(</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">&quot;username&quot;</span><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">password</span></i><span style=\"font-size: 14px;font-family: Consolas\"> = properties.getProperty(</span><span style=\"font-size:14px;font-family:Consolas;color:#2A00FF\">&quot;password&quot;</span><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Class.<i>forName</i>(</span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">driver_class</span></i><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connection = DriverManager.<i>getConnection</i>(</span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">url</span></i><span style=\"font-size: 14px;font-family: Consolas\">,</span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">username</span></i><span style=\"font-size: 14px;font-family: Consolas\">,</span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">password</span></i><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">catch</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> (Exception e) {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">return</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> connection;</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size:16px;font-family:宋体\">&nbsp;</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">public</span></strong> <strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">static</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> Properties getProperties(){</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Properties properties = </span><strong><span style=\"font-size:14px;font-family: Consolas;color:#7F0055\">new</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> Properties();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">try</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 12px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileInputStream fileInputStream = </span><strong><span style=\"font-size:12px;font-family: Consolas;color:#7F0055\">new</span></strong><span style=\"font-size: 12px;font-family: Consolas\"> FileInputStream(</span><span style=\"font-size:12px;font-family:Consolas;color:#2A00FF\">&quot;src/db.properties&quot;</span><span style=\"font-size: 12px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; properties.load(fileInputStream);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String driver_class = properties.getProperty(</span><span style=\"font-size: 14px;font-family:Consolas;color:#2A00FF\">&quot;driver_class&quot;</span><span style=\"font-size: 14px;font-family: Consolas\">);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.</span><i><span style=\"font-size:14px;font-family:Consolas;color:#0000C0\">out</span></i><span style=\"font-size: 14px;font-family: Consolas\">.println(driver_class);</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">catch</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> (FileNotFoundException e) {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">catch</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> (IOException e) {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp; </span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">return</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> properties;</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size:14px;font-family:宋体\">&nbsp;</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">public</span></strong> <strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">static</span></strong> <strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">void</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> closeConn(Connection conn) {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">try</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">if</span></strong><span style=\"font-size: 14px;font-family: Consolas\">(conn!=</span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">null</span></strong><span style=\"font-size: 14px;font-family: Consolas\">)</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.close();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span><strong><span style=\"font-size:14px;font-family:Consolas;color:#7F0055\">catch</span></strong><span style=\"font-size: 14px;font-family: Consolas\"> (Exception e) {</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.<span style=\"background:lightgrey;background:lightgrey\">printStackTrace</span>();</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp;&nbsp;&nbsp; }</span></p><p style=\"line-height: normal;\"><span style=\"font-size: 14px;font-family: Consolas\">&nbsp; &nbsp;</span></p><p><strong><span style=\"font-size: 20px; \">常见技术问题、经验汇总</span></strong></p><p><br/></p><p>1、问：怎么在JSP页面的一个List或Set中查找一个元素？<br/></p><p>解析：</p><p>方法1：</p><p>最原始的方法，循环遍历，用JSTL标签就可以做。</p><p>&nbsp;</p><p>方法2：</p><p>在Struts2标签中，可以用in关键字或contains方法。比如：</p><p style=\"line-height: normal; \"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&lt;s:if&nbsp;test=&quot;#stu2&nbsp;in&nbsp;studentSet&quot;&gt;checked&lt;/s:if&gt;</span></p><p style=\"line-height: normal; \"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&lt;s:if&nbsp;test=&quot;#&nbsp;stu2&nbsp;in&nbsp;studentList&quot;&gt;checked&lt;/s:if&gt;</span></p><p style=\"line-height: normal; \"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&lt;s:if&nbsp;test=&quot;studentList.contains(#stu2)&quot;&gt;checked&lt;/s:if&gt;</span></p><p style=\"line-height: normal; \"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&lt;s:if&nbsp;test=&quot;studentSet.contains(#stu2)&quot;&gt;checked&lt;/s:if&gt;</span></p><p style=\"line-height:29px\"><span style=\";font-family:宋体;font-size:19px\">注意，低版本的<span style=\"font-family:Times New Roman\">Struts2</span><span style=\"font-family:宋体\">可能不支持这种方法。</span></span></p><p style=\"line-height:29px\"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&nbsp;</span></p><p>方法3：</p><p>如果元素是String类型，用JS可以巧妙地实现。关键之处：用元素名作为id。比如</p><p style=\"line-height: normal; \"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&lt;input&nbsp;id=&quot;name1&quot;&nbsp;type=&quot;checkbox&quot;/&gt;</span></p><p style=\"line-height: normal; \"><span style=\";font-family:&#39;Times New Roman&#39;;font-size:19px\">&lt;input&nbsp;id=&quot;name2&quot;&nbsp;type=&quot;checkbox&quot;/&gt;</span></p><p style=\"line-height:29px\"><span style=\";font-family:宋体;font-size:19px\">然后写<span style=\"font-family:Times New Roman\">JS</span><span style=\"font-family:宋体\">代码：</span></span></p><pre class=\"brush:js;toolbar:false\">var&nbsp;studentStr&nbsp;=&nbsp;&quot;&lt;s:property&nbsp;value=&quot;&nbsp;students&quot;&nbsp;/&gt;&quot;;\r\n" + 
            "var&nbsp;studentArray&nbsp;=&nbsp;studentStr.split(&quot;,&quot;);\r\n" + 
            "$.each(studentArray,&nbsp;function(index,&nbsp;value){\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;id&nbsp;=&nbsp;&quot;#&quot;+value;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;$(id).attr(&quot;checked&quot;,&quot;checked&quot;);\r\n" + 
            "});</pre><p style=\"line-height:29px\"><span style=\"font-family:&#39;Times New Roman&#39;\"></span><br/></p><p>3、问：如何获得可配置的下拉菜单数据？数据存于数据库中，比如银行列表，如下：</p><pre class=\"brush:html;toolbar:false\">&lt;select&nbsp;name=&quot;bankList&quot;&nbsp;id=&quot;band_list&quot;&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=&quot;ICBC&quot;&gt;工商银行&lt;/option&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=&quot;ALIPAY&quot;&gt;支付宝&lt;/option&gt;\r\n" + 
            "&lt;/select&gt;</pre><p>解析：</p><p>方法1：动态获取</p><p>每次都到数据库中去查询。这种方法，效率低，但实时性高，适合实时变动的数据。</p><p>方法2：静态获取</p><p>只在服务器启动时查询一次，然后放到缓存中，以后直接取用。</p><p>首先编写一个CacheDataLoaderListener（实现ServletContextListener类），在服务器启动时就去加载数据库中的数据到静态变量中。</p><p style=\"line-height: normal; \">&lt;listener&gt;</p><p style=\"line-height: normal; \">&nbsp; &nbsp; &lt;listener-class&gt;com.zollty.app.config.CacheDataLoaderListener&lt;/listener-class&gt;</p><p style=\"line-height: normal; \">&lt;/listener&gt;</p><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;CacheDataLoaderListener&nbsp;implements&nbsp;ServletContextListener&nbsp;{\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;contextInitialized(ServletContextEvent&nbsp;event)&nbsp;{\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConfigCache.getInstance().loadAll();\r\n" + 
            "\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;}\r\n" + 
            "\r\n" + 
            "}</pre><p style=\"line-height: normal; \"><span class=\"Apple-style-span\" style=\"line-height: 32px; \">然后在页面上，用类似如下的方法获取数据：</span></p><pre class=\"brush:html;toolbar:false\">&lt;select&nbsp;name=&quot;bank&quot;&nbsp;&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=&quot;&quot;&gt;所有银行&lt;/option&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:iterator&nbsp;value=&quot;@com.zollty.ConfigService@getBankMap()&quot;&nbsp;id=&quot;bank&quot;&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=&#39;&lt;s:property&nbsp;value=&quot;#&nbsp;bank.key&quot;/&gt;&#39;&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:property&nbsp;value=&quot;#bank.name&quot;/&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/option&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;/s:iterator&gt;\r\n" + 
            "&lt;/select&gt;</pre><p>上面的代码中用到了Struts标签的访问静态函数的功能。</p><p>也可放到session中，如下：</p><p>Java中写如下代码：this.getSession().setAttribute(&quot;bankSelectOption&quot;,&nbsp;bankList&nbsp;);</p><p>然后在页面用类似下面的方法获取：</p><pre class=\"brush:html;toolbar:false\">&lt;select&nbsp;name=&quot;bank&quot;&nbsp;&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=&quot;&quot;&gt;所有银行&lt;/option&gt;\r\n" + 
            "&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:property&nbsp;value=&quot;#session.bankSelectOption&quot;&nbsp;escape=&quot;false&quot;/&gt;\r\n" + 
            "&lt;/select&gt;</pre><p style=\"line-height:29px\"><span style=\"font-family: &#39;Times New Roman&#39;; font-size: 19px; \"></span>这个bankSelectOption是个字符串。</p><p style=\"line-height: 29px;\"><br/></p><p style=\"line-height: 29px;\"><strong><span style=\"font-size: 20px;\">HttpClient报错<span style=\"font-family: &quot;Times New Roman&quot;;\"></span></span></strong></p><p style=\"line-height: 29px;\">报错：<strong>socket closed</strong> AbstractSessionInputBuffer.fillBuffer</p><div>解决方案：</div><div>是提前关闭了输入流造成的，</div><div>去掉类似</div><div>&nbsp;io.close()&nbsp;</div><div>httpclient.getConnectionManager().shutdown()</div><div><p>之类的语句就可以了。</p><p><br/></p><p><strong><span style=\"font-size: 20px;\">JPA注解</span></strong></p><div>@Temporal(TemporalType.DATE)的作用</div><div><strong>加上这一句，时间就只精确到天</strong>。去掉这一句，时间就可以精确到秒。</div><p><br/></p></div><p style=\"line-height: 29px;\"><span style=\"font-family: &#39;Times New Roman&#39;; font-size: 19px; \"><br/></span></p>";


    @Test
    public void t00() throws Exception {
        String t = "aaaaaaaaaa<table></table>aaa<table></table>MySqlE";
        String s = "<table";
        doTest(1000000, t, s);
        System.out.println("-------------------------t00");
    }

    @Test
    public void t01() throws Exception {
        String t = "aaaaaaaaaa<table></table>aaa<table></table>" + LONG_STR;
        String s = "<table";// "<TABLE";
        doTest(1000, t, s);
        System.out.println("-------------------------t01");
    }
    
    @Test
    public void t02() throws Exception {
        String t = "aaaaaaaaaa<table></table>aaa<table></table>" + LONG_STR;
        String s = "<TABLE";
        doTest(1000, t, s);
        System.out.println("-------------------------t02");
    }
    
    @Test
    public void t03() throws Exception {
        String t = "aaaaaaaaaa<table></table>aaa<table></table>" 
                + LONG_STR + "MySqlE";
        String s = "mysqle";
        doTest(100000, t, s);
        System.out.println("-------------------------t03");
    }
    
    @Test
    public void t04() throws Exception {
        String t = "aaaaaaaaaa<table></table>aaa<table></table>" 
                + LONG_STR + "MySqlE";
        String s = "xXxXxXxX";
        doTest(1000, t, s);
        System.out.println("-------------------------t04");
    }
    
    
    static void doTest(final int n, final String t, final String s) throws Exception {
        System.out.println(t.length());
        System.out.println(t.lastIndexOf(s));
        System.out.println(Str021.lastIndexIgnoreCase(t, s));
        System.out.println(Str031.lastIndexIgnoreCase(t, s));
        System.out.println(Str041.lastIndexIgnoreCase(t, s));

        TestTools.loopExecute(new LoopExecute() {
            @Override
            public int getLoopTimes() {
                return n;
            }
            @Override
            public void execute() throws Exception {
                Str041.lastIndexIgnoreCase(t, s);
            }
        });
        TestTools.loopExecute(new LoopExecute() {
            @Override
            public int getLoopTimes() {
                return n;
            }
            @Override
            public void execute() throws Exception {
                Str021.lastIndexIgnoreCase(t, s);
            }
        });
        TestTools.loopExecute(new LoopExecute() {
            @Override
            public int getLoopTimes() {
                return n;
            }
            @Override
            public void execute() throws Exception {
                Str031.lastIndexIgnoreCase(t, s);
            }
        });
    }

}
