/* 
 * Copyright (C) 2013-2015 the original author or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * Create by ZollTy on 2014-5-22 (http://blog.zollty.com/, zollty@163.com)
 */
package org.jretty.util;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * @author zollty
 * @since 2014-5-22
 */
public class StringUtilsTest {
    
    @Test
    public void test_areNotEmpty(){
        
        assertFalse(StringUtils.areNotEmpty("s", "", ""));
        assertFalse(StringUtils.areNotEmpty("", "s", ""));
        assertFalse(StringUtils.areNotEmpty("", "", null));
        assertFalse(StringUtils.areNotEmpty(null, "", ""));
        assertFalse(StringUtils.areNotEmpty(null, null, null));
        
        assertTrue(StringUtils.areNotEmpty("s", "-", "-"));
    }
    
    @Test
    public void testReplaceParams(){
        
        assertEquals(StringUtils.replaceParams("dss{}-{}-{}ssssssss", new String[]{"1111", null, "2222"}),
                "dss1111-null-2222ssssssss");
        
        assertEquals(StringUtils.replaceParams("dssssssssss", new String[]{"1111", null, "2222"}),
                "dssssssssss 1111 null 2222");
        
        assertEquals(StringUtils.replaceParams("dsssss{}sssss", new String[]{"1111", null, "2222"}),
                "dsssss1111sssss null 2222");
        
        assertEquals(StringUtils.replaceParams("dssssssssss{}", new String[]{"1111", null, "2222"}),
                "dssssssssss1111 null 2222");
    }
    
    
    @Test
    public void testUnderline2Camel(){
        assertEquals("dsaTimeDS", StringUtils.underline2Camel("dsa_Time_DS"));
        assertEquals("dsaTimeDSE", StringUtils.underline2Camel("dsa_Time_DSE"));
        assertEquals("dsaTimeDSEr", StringUtils.underline2Camel("dsa_Time_DS_Er"));
        assertEquals("dsaTimeDSEre", StringUtils.underline2Camel("dsa_Time_DS_Ere"));
        assertEquals("dsaTimeDSErSk", StringUtils.underline2Camel("dsa_Time_DS_Er_Sk"));
        assertEquals("dsaTimeDSErST", StringUtils.underline2Camel("dsa_Time_DS_Er_ST"));
    }
    
    @Test
    public void testCamel2Underline(){
        assertEquals("dsa_Time_DS", StringUtils.camel2Underline("dsaTimeDS"));
        assertEquals("dsa_Time_DSE", StringUtils.camel2Underline("dsaTimeDSE"));
        assertEquals("dsa_Time_DS_Er", StringUtils.camel2Underline("dsaTimeDSEr"));
        assertEquals("dsa_Time_DS_Ere", StringUtils.camel2Underline("dsaTimeDSEre"));
        assertEquals("dsa_Time_DS_Er_Sk", StringUtils.camel2Underline("dsaTimeDSErSk"));
        assertEquals("dsa_Time_DS_Er_ST", StringUtils.camel2Underline("dsaTimeDSErST"));
    }
    
    @Test
    public void testReplace() {
        
        String str = "<p style=\"text-align:center;line-height:150%\"><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">技术手册</span></p><p style=\"text-align:center;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">作者：</span><span style=\"font-size:16px;line-height:150%\">zollty</span></p><p><span style=\"font-size:16px\">&nbsp;</span>一、几个术语</p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">ASF</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Apache Software Foundation</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">，即</span><span style=\"font-size:16px;line-height:150%\">Apache</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">自由软件基金会。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Jakarta</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">ASF</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">这个组织包含了很多软件项目，</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是</span><span style=\"font-size:16px;line-height:150%\">ASF</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">旗下的一套</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">解决方案的开源项目的名称，它包括了很多子项目，比如</span><span style=\"font-size:16px;line-height:150%\">Tomcat</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">Ant</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">、</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">等。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JVM</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">虚拟机，包括一套字节码指令集、一组寄存器、一个栈、一个垃圾回收堆和一个存储方法域。它屏蔽了与具体操作系统平台相关的信息，使</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序只需生成在</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JSP</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Java Server Page</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，是同</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">结合在一起的动态网页。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Servlet</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是</span><span style=\"font-size:16px;line-height:150%\">Java Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的简称，由</span><span style=\"font-size:16px;line-height:150%\">Serve+Applet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">演变而来，字面意思即“服务端小程序”，和</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">属于同一个层面。它是服务器端的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用程序，由</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器进行加载。</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的主要功能在于交互式地浏览和修改数据，生成动态</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">内容。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">CGI</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Common Gateway Interface</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">（通用网关接口），它是一段程序，运行在服务器上，提供同客户端</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">页面的接口，通俗的讲</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">就像是一座桥，把网页和</span><span style=\"font-size:16px;line-height:150%\">WEB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器中的执行程序连接起来，它把</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">接收的指令传递给服务器，再把服务器执行的结果返还给</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">页；用</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">可以实现处理表格，数据库查询，发送电子邮件等许多操作，最常见的</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序就是计数器。</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">使网页变得不是静态的，而是交互式的。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">Java Servlet</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">CGI</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的比较</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器上需要一些程序，常常是根据用户输入访问数据库的程序。这些通常是使用公共网关接口（</span><span style=\"font-size:16px;line-height:150%\">CGI(Common Gateway Interface)</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）应用程序完成的。然而，在服务器上运行</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，这种程序可使用</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">编程语言实现。在通信量大的服务器上，</span><span style=\"font-size:16px;line-height:150%\">Java Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的优点在于它们的执行速度更快于</span><span style=\"font-size: 16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序。各个用户请求被激活成单个程序中的一个线程，而无需创建单独的进程，这意味着服务器端处理请求的系统开销将明显降低。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">Java Servlet</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">JSP</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的比较</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">在底层运行的原理上是完全一样的。运行时，</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">必须被</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器编译成</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，真正提供</span><span style=\"font-size:16px;line-height:150%\">HTTP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务的也是</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，因此广义的</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">包含</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">。目前的</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">应用中已经很少单纯的使用</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">充当表示层，更多的是作为控制层组件来使用。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Tomcat</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是一个免费开源的</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">容器，是</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">项目中的一个核心项目，最初是由</span><span style=\"font-size:16px;line-height:150%\">Sun</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的软件构架师</span><span style=\"font-size:16px;line-height:150%\">James Duncan Davidson</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">开发的，后来他帮助将其变为开源项目，并由</span><span style=\"font-size:16px;line-height:150%\">Sun</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">贡献给</span><span style=\"font-size:16px;line-height:150%\">Apache</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">软件基金会。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架（</span><span style=\"font-size:16px;line-height:150%\">Model-View-Controller Framework</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），它包括</span><span style=\"font-size:16px;line-height:150%\">3</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">类对象：</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是应用对象，也就是功能逻辑，</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是指在屏幕上的表示，也就是</span><span style=\"font-size:16px;line-height:150%\">UI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">User Interface</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">用户界面）；</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">定义用户界面对于用于输入的响应方式，即对请求和应答事件进行处理。通常把</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">按软件层次分成</span><span style=\"font-size:16px;line-height:150%\">3</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">层：视图（</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）层，模型（</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）层，控制（</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）层。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Struts</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">也是</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的一个核心子项目，它提供了一种方法，可以在一个</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用程序中一起使用</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">。其目的是要解决完全由</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">或</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">实现的传统应用程序中固有的问题，例如，用</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">很难将</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">代码同</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">分开，结果将导致代码易懂性不高，后期维护较难。</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">其实也是一个</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架，但</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的重点在于</span><span style=\"font-size:16px;line-height:150%\">C</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端（控制端），同时也为</span><span style=\"font-size:16px;line-height:150%\">V</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端提供了一系列定制的标签，但是几乎没有涉及到</span><span style=\"font-size:16px;line-height:150%\">M</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端。所以在流行的轻量级</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架组合</span><span style=\"font-size:16px;line-height:150%\">SSH</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">中，</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">只是扮演了</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">端的角色。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JavaBean</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是一种</span><span style=\"font-size:16px;line-height:150%\">JAVA</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">语言写成的可重用组件，是公共的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">类。在</span><span style=\"font-size:16px;line-height:150%\">IDE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">中，</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的功能允许应用开发者浏览其中的方法，即</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是被编译的，无法利用原始的源文件。此外，还发展出了企业</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Enterprise JavaBeans</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），即</span><strong><span style=\"font-size:16px;line-height:150%\">EJB</span></strong><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，它包括会话</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Session Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），实体</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Entity Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）和消息驱动</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">MessageDriven Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。由于</span><span style=\"font-size:16px;line-height:150%\">EJB2.0</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">过于复杂，在</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">等轻量级框架出现后，大量的用户放弃了</span><span style=\"font-size:16px;line-height:150%\">EJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">。但目前轻量级的</span><span style=\"font-size:16px;line-height:150%\">EJB3.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">EJB3.1</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">已经放出，并得到了认可。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">JavaBean</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">EJB</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的区别</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是使用</span><span style=\"font-size:16px;line-height:150%\">java.beans</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">包开发的，它是</span><span style=\"font-size:16px;line-height:150%\">Java 2</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">标准版的一部分。</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是一台机器上同一个地址空间中运行的组件，是进程内组件。</span><span style=\"font-size:16px;line-height:150%\">Enterprise Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是使用</span><span style=\"font-size:16px;line-height:150%\">javax.ejb</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">包开发的，它是标准</span><span style=\"font-size:16px;line-height:150%\">JDK</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的扩展，是</span><span style=\"font-size:16px;line-height:150%\">J2EE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的一部分。</span><span style=\"font-size:16px;line-height:150%\">EJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是在多台机器上跨几个地址空间运行的组件，是进程间组件。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p>JavaEE中的两个MVC模型</p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC Model 1</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即传统的</span><span style=\"font-size:16px;line-height:150%\">JSP+JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，目前已经很少用了，但是初学者学习</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">前有必要了解。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC Model 2</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该模型的标准是：</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（视图</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，用户界面）</span><span style=\"font-size:16px;line-height:150%\">+Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（控制器</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，输入处理）</span><span style=\"font-size:16px;line-height:150%\">+JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（模型</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，功能逻辑）。由于</span><span style=\"font-size:16px;line-height:150%\">Java EE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">中的</span><span style=\"font-size:16px;line-height:150%\">JavaBean </span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（</span><span style=\"font-size:16px;line-height:150%\">EJB2.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）太复杂了，所以该模型最流行的一个版本是</span><span style=\"font-size:16px;line-height:150%\">SSH</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，即</span><span style=\"font-size:16px;line-height:150%\">Struts+Spring+Hibernate</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p>JavaEE应用分层模型</p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">大致分为如下五层：</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（数据持久层</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">数据访问层）</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">业务逻辑层</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">控制层</span></strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">表示层</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">&nbsp;</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">数据持久层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列负责操纵</span><span style=\"font-size:16px;line-height:150%\">POJO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Plain Old Java Object</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，普通的、传统的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">对象）的类组成，这些类负责把数据进行持久化，一般是<span style=\"text-decoration:underline;\">把数据保存到数据库中</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">数据访问层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列的</span><span style=\"font-size:16px;line-height:150%\">DAO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Data Access Object</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）组件组成，<span style=\"text-decoration:underline;\">实现对数据的增、删、改、查等细粒度的操作</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">业务逻辑层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列的业务逻辑对象组成，<span style=\"text-decoration:underline;\">实现系统所需要的业务逻辑方法</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">控制层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">此层由一系列控制器组成，用于<span style=\"text-decoration:underline;\">拦截用户请求</span>并调用业务逻辑对象的业务方法来处理请求，根据处理结果转发到不同的表示层。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">表示层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">此层由一系列的视图组件（<span style=\"text-decoration:underline;\">例如</span></span><span style=\"text-decoration:underline;\"><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">页面</span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）组成，负责收集用户请求并显示处理结果。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">各层组件之间以松散的方式耦合在一起。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">1</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">1</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">2</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">2 </span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>业务逻辑对象</strong></span><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>控制层</strong></span><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>表示层组件</strong></span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">3</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">3</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Hibernate</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">它是一个开源的、轻量级的</span><span style=\"font-size:16px;line-height:150%\">ORM</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Object Relation Mapping</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">）持久化框架，它允许应用程序以面向对象的方式来操作关系型的数据库。通过简单的配置和编码即可替代</span><span style=\"font-size:16px;line-height:150%\">JDBC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">繁琐的程序代码。在</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">语言中，数据可以存储在实体对象中，同时实体对象之间具有继承、多态和聚合等特点，而在数据库中存储的是二维关系数据，表与表的关系只有主外键关联关系，</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的引入可以解决上述矛盾。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Spring</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">框架是</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">应用的全方位解决方案，它贯穿于表示层、业务层和持久层。</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">自身还提供了一个</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架：</span><span style=\"font-size:16px;line-height:150%\">Spring MVC</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，使用</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">可以直接使用该</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架，也可以方便地与其他</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架集成，它像是一个中间容器，向上可以与</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架整合，向下可以和各种持久层框架整合（</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">iBATIS</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">OJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">、</span><span style=\"font-size:16px;line-height:150%\">JDBC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），将系统中的各个部分组件以松散的方式结合在一起。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; Spring</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">作为一个一站式的</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">解决方案，渗透了</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">技术的方方面面，它主要用来实现依赖注入、面向切面编程（</span><span style=\"font-size:16px;line-height:150%\">AOP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，用于降低耦合）、声明式事务以及对持久层的支持和简化等功能。最新的</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">框架也集成了</span><span style=\"font-size:16px;line-height:150%\">JPA</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Java Persistence API</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，</span><span style=\"font-size:16px;line-height: 150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">持久化</span><span style=\"font-size:16px;line-height:150%\">API</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），并实现了</span><span style=\"font-size:16px;line-height:150%\">EJB3.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的一些特性。</span><span style=\"font-size:16px;line-height:150%\"> </span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p><br/><span style=\"font-size:16px\"></span></p><p><span style=\"font-size:16px\"></span></p><div><strong><span style=\"font-size: 20px;\">RESTful 之 HTTP中的PUT 和 POST的区别</span></strong></div><div><p><br/></p><p>根本区别是，PUT是“幂等的”（indempotent），而POST则不是。</p></div><div>何为“幂等”，官方的描述如下：</div><div>Methods";
        
        String newStr = StringUtils.replace(str, "宋体\">持久化", "黑体\">持9化");
        
        String rightStr = "<p style=\"text-align:center;line-height:150%\"><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">技术手册</span></p><p style=\"text-align:center;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">作者：</span><span style=\"font-size:16px;line-height:150%\">zollty</span></p><p><span style=\"font-size:16px\">&nbsp;</span>一、几个术语</p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">ASF</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Apache Software Foundation</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">，即</span><span style=\"font-size:16px;line-height:150%\">Apache</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">自由软件基金会。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Jakarta</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">ASF</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">这个组织包含了很多软件项目，</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是</span><span style=\"font-size:16px;line-height:150%\">ASF</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">旗下的一套</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">解决方案的开源项目的名称，它包括了很多子项目，比如</span><span style=\"font-size:16px;line-height:150%\">Tomcat</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">Ant</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">、</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">等。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JVM</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">虚拟机，包括一套字节码指令集、一组寄存器、一个栈、一个垃圾回收堆和一个存储方法域。它屏蔽了与具体操作系统平台相关的信息，使</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序只需生成在</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JSP</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Java Server Page</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，是同</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">结合在一起的动态网页。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Servlet</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是</span><span style=\"font-size:16px;line-height:150%\">Java Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的简称，由</span><span style=\"font-size:16px;line-height:150%\">Serve+Applet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">演变而来，字面意思即“服务端小程序”，和</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">属于同一个层面。它是服务器端的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用程序，由</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器进行加载。</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的主要功能在于交互式地浏览和修改数据，生成动态</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">内容。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">CGI</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">Common Gateway Interface</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">（通用网关接口），它是一段程序，运行在服务器上，提供同客户端</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">页面的接口，通俗的讲</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">就像是一座桥，把网页和</span><span style=\"font-size:16px;line-height:150%\">WEB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器中的执行程序连接起来，它把</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">接收的指令传递给服务器，再把服务器执行的结果返还给</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">页；用</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">可以实现处理表格，数据库查询，发送电子邮件等许多操作，最常见的</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序就是计数器。</span><span style=\"font-size:16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">使网页变得不是静态的，而是交互式的。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">Java Servlet</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">CGI</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的比较</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器上需要一些程序，常常是根据用户输入访问数据库的程序。这些通常是使用公共网关接口（</span><span style=\"font-size:16px;line-height:150%\">CGI(Common Gateway Interface)</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）应用程序完成的。然而，在服务器上运行</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，这种程序可使用</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">编程语言实现。在通信量大的服务器上，</span><span style=\"font-size:16px;line-height:150%\">Java Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的优点在于它们的执行速度更快于</span><span style=\"font-size: 16px;line-height:150%\">CGI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">程序。各个用户请求被激活成单个程序中的一个线程，而无需创建单独的进程，这意味着服务器端处理请求的系统开销将明显降低。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">Java Servlet</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">JSP</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的比较</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; Servlet</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">在底层运行的原理上是完全一样的。运行时，</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">必须被</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务器编译成</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，真正提供</span><span style=\"font-size:16px;line-height:150%\">HTTP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">服务的也是</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，因此广义的</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">包含</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">。目前的</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">应用中已经很少单纯的使用</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">充当表示层，更多的是作为控制层组件来使用。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Tomcat</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是一个免费开源的</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">容器，是</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">项目中的一个核心项目，最初是由</span><span style=\"font-size:16px;line-height:150%\">Sun</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的软件构架师</span><span style=\"font-size:16px;line-height:150%\">James Duncan Davidson</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">开发的，后来他帮助将其变为开源项目，并由</span><span style=\"font-size:16px;line-height:150%\">Sun</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">贡献给</span><span style=\"font-size:16px;line-height:150%\">Apache</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">软件基金会。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架（</span><span style=\"font-size:16px;line-height:150%\">Model-View-Controller Framework</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），它包括</span><span style=\"font-size:16px;line-height:150%\">3</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">类对象：</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是应用对象，也就是功能逻辑，</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是指在屏幕上的表示，也就是</span><span style=\"font-size:16px;line-height:150%\">UI</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">User Interface</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">用户界面）；</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">定义用户界面对于用于输入的响应方式，即对请求和应答事件进行处理。通常把</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">按软件层次分成</span><span style=\"font-size:16px;line-height:150%\">3</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">层：视图（</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）层，模型（</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）层，控制（</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）层。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Struts</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">也是</span><span style=\"font-size:16px;line-height:150%\">Jakarta</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的一个核心子项目，它提供了一种方法，可以在一个</span><span style=\"font-size:16px;line-height:150%\">Web</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用程序中一起使用</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">。其目的是要解决完全由</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">或</span><span style=\"font-size:16px;line-height:150%\">Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">实现的传统应用程序中固有的问题，例如，用</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">很难将</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">代码同</span><span style=\"font-size:16px;line-height:150%\">HTML</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">分开，结果将导致代码易懂性不高，后期维护较难。</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">其实也是一个</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架，但</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的重点在于</span><span style=\"font-size:16px;line-height:150%\">C</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端（控制端），同时也为</span><span style=\"font-size:16px;line-height:150%\">V</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端提供了一系列定制的标签，但是几乎没有涉及到</span><span style=\"font-size:16px;line-height:150%\">M</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">端。所以在流行的轻量级</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架组合</span><span style=\"font-size:16px;line-height:150%\">SSH</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">中，</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">只是扮演了</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">端的角色。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">JavaBean</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是一种</span><span style=\"font-size:16px;line-height:150%\">JAVA</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">语言写成的可重用组件，是公共的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">类。在</span><span style=\"font-size:16px;line-height:150%\">IDE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">中，</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的功能允许应用开发者浏览其中的方法，即</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是被编译的，无法利用原始的源文件。此外，还发展出了企业</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Enterprise JavaBeans</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），即</span><strong><span style=\"font-size:16px;line-height:150%\">EJB</span></strong><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，它包括会话</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Session Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），实体</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Entity Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）和消息驱动</span><span style=\"font-size:16px;line-height:150%\">Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">MessageDriven Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。由于</span><span style=\"font-size:16px;line-height:150%\">EJB2.0</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">过于复杂，在</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">和</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">等轻量级框架出现后，大量的用户放弃了</span><span style=\"font-size:16px;line-height:150%\">EJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">。但目前轻量级的</span><span style=\"font-size:16px;line-height:150%\">EJB3.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">EJB3.1</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">已经放出，并得到了认可。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">PS</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span><strong><span style=\"font-size:16px;line-height:150%\">JavaBean</span></strong><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">和</span></strong><strong><span style=\"font-size:16px;line-height:150%\">EJB</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的区别</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是使用</span><span style=\"font-size:16px;line-height:150%\">java.beans</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">包开发的，它是</span><span style=\"font-size:16px;line-height:150%\">Java 2</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">标准版的一部分。</span><span style=\"font-size:16px;line-height:150%\">JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">是一台机器上同一个地址空间中运行的组件，是进程内组件。</span><span style=\"font-size:16px;line-height:150%\">Enterprise Bean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是使用</span><span style=\"font-size:16px;line-height:150%\">javax.ejb</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">包开发的，它是标准</span><span style=\"font-size:16px;line-height:150%\">JDK</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的扩展，是</span><span style=\"font-size:16px;line-height:150%\">J2EE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的一部分。</span><span style=\"font-size:16px;line-height:150%\">EJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">是在多台机器上跨几个地址空间运行的组件，是进程间组件。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p>JavaEE中的两个MVC模型</p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC Model 1</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">即传统的</span><span style=\"font-size:16px;line-height:150%\">JSP+JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，目前已经很少用了，但是初学者学习</span><span style=\"font-size:16px;line-height:150%\">Struts</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">前有必要了解。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">MVC Model 2</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该模型的标准是：</span><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（视图</span><span style=\"font-size:16px;line-height:150%\">View</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，用户界面）</span><span style=\"font-size:16px;line-height:150%\">+Servlet</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（控制器</span><span style=\"font-size:16px;line-height:150%\">Controller</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，输入处理）</span><span style=\"font-size:16px;line-height:150%\">+JavaBean</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（模型</span><span style=\"font-size:16px;line-height:150%\">Model</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，功能逻辑）。由于</span><span style=\"font-size:16px;line-height:150%\">Java EE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">中的</span><span style=\"font-size:16px;line-height:150%\">JavaBean </span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">（</span><span style=\"font-size:16px;line-height:150%\">EJB2.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">）太复杂了，所以该模型最流行的一个版本是</span><span style=\"font-size:16px;line-height:150%\">SSH</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，即</span><span style=\"font-size:16px;line-height:150%\">Struts+Spring+Hibernate</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p>JavaEE应用分层模型</p><p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">大致分为如下五层：</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（数据持久层</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">数据访问层）</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">业务逻辑层</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">控制层</span></strong><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">——</span><span style=\"font-size:16px;line-height:150%\">&gt;</span><strong><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">表示层</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">&nbsp;</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">数据持久层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列负责操纵</span><span style=\"font-size:16px;line-height:150%\">POJO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Plain Old Java Object</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，普通的、传统的</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">对象）的类组成，这些类负责把数据进行持久化，一般是<span style=\"text-decoration:underline;\">把数据保存到数据库中</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">数据访问层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列的</span><span style=\"font-size:16px;line-height:150%\">DAO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Data Access Object</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）组件组成，<span style=\"text-decoration:underline;\">实现对数据的增、删、改、查等细粒度的操作</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">业务逻辑层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">该层由一系列的业务逻辑对象组成，<span style=\"text-decoration:underline;\">实现系统所需要的业务逻辑方法</span>。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">控制层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">此层由一系列控制器组成，用于<span style=\"text-decoration:underline;\">拦截用户请求</span>并调用业务逻辑对象的业务方法来处理请求，根据处理结果转发到不同的表示层。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">表示层：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">此层由一系列的视图组件（<span style=\"text-decoration:underline;\">例如</span></span><span style=\"text-decoration:underline;\"><span style=\"font-size:16px;line-height:150%\">JSP</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">页面</span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）组成，负责收集用户请求并显示处理结果。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">各层组件之间以松散的方式耦合在一起。</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">1</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">1</span></strong></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">2</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">2 </span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>业务逻辑对象</strong></span><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>控制层</strong></span><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——<strong>表示层组件</strong></span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">POJO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">3</span></strong><span style=\"font-size:16px;line-height:150%\">&lt;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">——</span><strong><span style=\"font-size:16px;line-height:150%\">DAO</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对象</span></strong><strong><span style=\"font-size:16px;line-height:150%\">3</span></strong></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Hibernate</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">它是一个开源的、轻量级的</span><span style=\"font-size:16px;line-height:150%\">ORM</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Object Relation Mapping</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">）持久化框架，它允许应用程序以面向对象的方式来操作关系型的数据库。通过简单的配置和编码即可替代</span><span style=\"font-size:16px;line-height:150%\">JDBC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">繁琐的程序代码。在</span><span style=\"font-size:16px;line-height:150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">语言中，数据可以存储在实体对象中，同时实体对象之间具有继承、多态和聚合等特点，而在数据库中存储的是二维关系数据，表与表的关系只有主外键关联关系，</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的引入可以解决上述矛盾。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><strong><span style=\"font-size:16px;line-height:150%\">Spring</span></strong><strong><span style=\"font-size:16px;line-height:150%;font-family:宋体\">：</span></strong><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">框架是</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">应用的全方位解决方案，它贯穿于表示层、业务层和持久层。</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">自身还提供了一个</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架：</span><span style=\"font-size:16px;line-height:150%\">Spring MVC</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">，使用</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">可以直接使用该</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架，也可以方便地与其他</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架集成，它像是一个中间容器，向上可以与</span><span style=\"font-size:16px;line-height:150%\">MVC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">框架整合，向下可以和各种持久层框架整合（</span><span style=\"font-size:16px;line-height:150%\">Hibernate</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">iBATIS</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">、</span><span style=\"font-size:16px;line-height:150%\">OJB</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">、</span><span style=\"font-size:16px;line-height:150%\">JDBC</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），将系统中的各个部分组件以松散的方式结合在一起。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp; Spring</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">作为一个一站式的</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">解决方案，渗透了</span><span style=\"font-size:16px;line-height:150%\">JavaEE</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">技术的方方面面，它主要用来实现依赖注入、面向切面编程（</span><span style=\"font-size:16px;line-height:150%\">AOP</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，用于降低耦合）、声明式事务以及对持久层的支持和简化等功能。最新的</span><span style=\"font-size:16px;line-height:150%\">Spring</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">框架也集成了</span><span style=\"font-size:16px;line-height:150%\">JPA</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">（</span><span style=\"font-size:16px;line-height:150%\">Java Persistence API</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">，</span><span style=\"font-size:16px;line-height: 150%\">Java</span><span style=\"font-size:16px;line-height:150%;font-family:黑体\">持9化</span><span style=\"font-size:16px;line-height:150%\">API</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），并实现了</span><span style=\"font-size:16px;line-height:150%\">EJB3.0</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">的一些特性。</span><span style=\"font-size:16px;line-height:150%\"> </span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p><br/><span style=\"font-size:16px\"></span></p><p><span style=\"font-size:16px\"></span></p><div><strong><span style=\"font-size: 20px;\">RESTful 之 HTTP中的PUT 和 POST的区别</span></strong></div><div><p><br/></p><p>根本区别是，PUT是“幂等的”（indempotent），而POST则不是。</p></div><div>何为“幂等”，官方的描述如下：</div><div>Methods";
        
        // System.out.println(newStr);
        
        assertEquals(rightStr, newStr);
        
        str = "1aa2aa3aa4";
        newStr = StringUtils.replace(str, "aa", "--");
        
        assertEquals("1--2--3--4", newStr);
        
        str = "1\r\n2\r\n3\r\n4";
        newStr = StringUtils.replace(str, "\r\n", "--");
        // System.out.println(newStr);
    }
    
    @Test
    public void test_cutString(){
        String test = "1234567890123456789";
        assertEquals(test, StringUtils.cutString(test, 20));
        assertEquals(20, StringUtils.cutString("123456789012345678901", 20).length());
    }
    
    @Test
    public void testIndex() {
        String str = "01234560123456";
        assertEquals("01", StringUtils.beforeIndex(str, "23"));
        assertEquals("012345601234", StringUtils.beforeLastIndex(str, "56"));
        assertEquals("4560123456", StringUtils.afterIndex(str, "23"));
        assertEquals("56", StringUtils.afterLastIndex(str, "34"));
        assertEquals("014560123456", StringUtils.stripIndex(str, "23"));
        assertEquals("234", StringUtils.middleOfIndex(str, "01", "56"));
    }
    
    @Test
    public void test_charEqualIgnoreCase() {
        assertTrue(StringUtils.charEqualIgnoreCase('A', 'a'));
        assertTrue(StringUtils.charEqualIgnoreCase('z', 'Z'));
        assertTrue(StringUtils.charEqualIgnoreCase('Z', 'Z'));
        assertTrue(StringUtils.charEqualIgnoreCase('额', '额'));
        assertFalse(StringUtils.charEqualIgnoreCase('额', '饿'));
        assertTrue(StringUtils.charEqualIgnoreCase('-', '-'));
        assertTrue(StringUtils.charEqualIgnoreCase('.', '.'));
        assertTrue(StringUtils.charEqualIgnoreCase('2', '2'));
        assertTrue(StringUtils.charEqualIgnoreCase('▓', '▓'));
        assertTrue(StringUtils.charEqualIgnoreCase('@', '@'));
        assertTrue(StringUtils.charEqualIgnoreCase('/', '/'));
    }
    
    
    @Test
    public void testIndexIgnoreCase() {
        assertEquals(StringUtils.indexIgnoreCase("", "xxx"), -1);
        assertEquals(StringUtils.indexIgnoreCase("xxx", ""), 0);
        assertEquals(StringUtils.indexIgnoreCase("", ""), 0);
        
        assertEquals(StringUtils.indexIgnoreCase("", "xxx", 1), -1);
        assertEquals(StringUtils.indexIgnoreCase("xxx", "", 1), 1);
        assertEquals(StringUtils.indexIgnoreCase("", "", 1), 1);

        assertEquals(0, StringUtils.indexIgnoreCase("aabaabaa", "a"));
        assertEquals(2, StringUtils.indexIgnoreCase("aabaabaa", "b"));
        assertEquals(1, StringUtils.indexIgnoreCase("aabaabaa", "ab"));
        assertEquals(0, StringUtils.indexIgnoreCase("aabaabaa", "A"));
        assertEquals(2, StringUtils.indexIgnoreCase("aabaabaa", "B"));
        assertEquals(1, StringUtils.indexIgnoreCase("aabaabaa", "AB"));
        assertEquals(4, StringUtils.indexIgnoreCase("aaba\r\nabaa", "\r\n"));
        assertEquals(10, StringUtils.indexIgnoreCase("aaba\r\nabaa╋ふ▒㊧❀", "╋ふ▒㊧❀"));
    }
    
    @Test
    public void testLastIndexIgnoreCase() {
        assertEquals(StringUtils.lastIndexIgnoreCase("", "xxx"), -1);
        assertEquals(StringUtils.lastIndexIgnoreCase("xxx", ""), 3);
        assertEquals(StringUtils.lastIndexIgnoreCase("", ""), 0);
        
        assertEquals(StringUtils.lastIndexIgnoreCase("xxx", "x", -1), -1);
        assertEquals(StringUtils.lastIndexIgnoreCase("xxx", "", 2), 2);
        assertEquals(StringUtils.lastIndexIgnoreCase("xxx", "", 5), 3);
        
        assertTrue(StringUtils.lastIndexIgnoreCase("aabaabaa", "a") == 7);
        assertTrue(StringUtils.lastIndexIgnoreCase("aabaabaa", "b") == 5);
        assertTrue(StringUtils.lastIndexIgnoreCase("aabaabaa", "ab") == 4);
        assertTrue(StringUtils.lastIndexIgnoreCase("aabaabaa", "A") == 7);
        assertTrue(StringUtils.lastIndexIgnoreCase("aabaabaa", "B") == 5);
        assertTrue(StringUtils.lastIndexIgnoreCase("aabaabaa", "AB") == 4);
        assertTrue(StringUtils.lastIndexIgnoreCase("aaba\r\nabaa", "\r\n") == 4);
        assertTrue(StringUtils.lastIndexIgnoreCase("aaba\r\nabaa╋ふ▒㊧❀", "╋ふ▒㊧❀") == 10);
    }
    
    static final String TEST_STR = "01234567890123";
    @Test
    public void testMatchFromIndex() {
        int idx = StringUtils.matchFromIndex(TEST_STR, 1, "0");
        assertEquals(10, idx);
        
        idx = StringUtils.matchFromIndex(TEST_STR, 0, "01");
        assertEquals(0, idx);
    }
    
    @Test
    public void testStartsWithFromIndex() {
        assertTrue(StringUtils.startsWithFromIndex(TEST_STR, 0, "012"));
        assertTrue(StringUtils.startsWithFromIndex(TEST_STR, 9, "901"));
    }
    
    @Test
    public void testMiddleOfIndex() {
        assertEquals("3456789", StringUtils.middleOfIndex(TEST_STR, "012", "012"));
        assertNull(StringUtils.middleOfIndex(TEST_STR, "012", "46"));
    }
    
    @Test
    public void testStripMiddleOfIndex() {
        String first = StringUtils.beforeIndex(TEST_STR, "89");
        int idx = TEST_STR.indexOf("89");
        int idx2 = StringUtils.matchFromIndex(TEST_STR, idx, "12");
        assertEquals("012345673", first + TEST_STR.substring(idx2 + 2));
        assertEquals("012345673", StringUtils.stripMiddleOfIndex(TEST_STR, "89", "12"));
        assertEquals("014567890123", StringUtils.stripMiddleOfIndex(TEST_STR, "2", "3"));
        assertEquals(TEST_STR, StringUtils.stripMiddleOfIndex(TEST_STR, "89", "122"));
        assertEquals(TEST_STR, StringUtils.stripMiddleOfIndex(TEST_STR, "819", "12"));
    }
    
    @Test
    public void testReplaceMiddleOfIndex() {
        assertEquals("01234567aaa3", StringUtils.replaceMiddleOfIndex(TEST_STR, "89", "12", "aaa"));
        assertEquals("01aaa4567890123", StringUtils.replaceMiddleOfIndex(TEST_STR, "2", "3", "aaa"));
    }
    
    @Test
    public void testReplaceBetween() {
        assertEquals("0123456789aaa123", StringUtils.replaceBetween(TEST_STR, "89", "12", "aaa"));
        assertEquals("012aaa34567890123", StringUtils.replaceBetween(TEST_STR, "2", "3", "aaa"));
    }
    
    
}
